// a10s_ghrd.v

// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module a10s_ghrd (
		input  wire [1:0]  button_pio_external_connection_export,    //      button_pio_external_connection.export
		input  wire        clk_100_clk,                              //                             clk_100.clk
		input  wire        clock_bridge_0_in_clk_clk,                //               clock_bridge_0_in_clk.clk
		output wire [31:0] dc_fifo_0_out_data,                       //                       dc_fifo_0_out.data
		output wire        dc_fifo_0_out_valid,                      //                                    .valid
		input  wire        dc_fifo_0_out_ready,                      //                                    .ready
		input  wire [31:0] dc_fifo_1_in_data,                        //                        dc_fifo_1_in.data
		input  wire        dc_fifo_1_in_valid,                       //                                    .valid
		output wire        dc_fifo_1_in_ready,                       //                                    .ready
		input  wire [1:0]  dipsw_pio_external_connection_export,     //       dipsw_pio_external_connection.export
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_ck,      //        emif_a10_hps_mem_conduit_end.mem_ck
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_ck_n,    //                                    .mem_ck_n
		output wire [16:0] emif_a10_hps_mem_conduit_end_mem_a,       //                                    .mem_a
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_act_n,   //                                    .mem_act_n
		output wire [1:0]  emif_a10_hps_mem_conduit_end_mem_ba,      //                                    .mem_ba
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_bg,      //                                    .mem_bg
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_cke,     //                                    .mem_cke
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_cs_n,    //                                    .mem_cs_n
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_odt,     //                                    .mem_odt
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_reset_n, //                                    .mem_reset_n
		output wire [0:0]  emif_a10_hps_mem_conduit_end_mem_par,     //                                    .mem_par
		input  wire [0:0]  emif_a10_hps_mem_conduit_end_mem_alert_n, //                                    .mem_alert_n
		inout  wire [3:0]  emif_a10_hps_mem_conduit_end_mem_dqs,     //                                    .mem_dqs
		inout  wire [3:0]  emif_a10_hps_mem_conduit_end_mem_dqs_n,   //                                    .mem_dqs_n
		inout  wire [31:0] emif_a10_hps_mem_conduit_end_mem_dq,      //                                    .mem_dq
		inout  wire [3:0]  emif_a10_hps_mem_conduit_end_mem_dbi_n,   //                                    .mem_dbi_n
		input  wire        emif_a10_hps_oct_conduit_end_oct_rzqin,   //        emif_a10_hps_oct_conduit_end.oct_rzqin
		input  wire        emif_a10_hps_pll_ref_clk_clock_sink_clk,  // emif_a10_hps_pll_ref_clk_clock_sink.clk
		input  wire        f2h_cold_reset_req_reset_n,               //                  f2h_cold_reset_req.reset_n
		input  wire        f2h_debug_reset_req_reset_n,              //                 f2h_debug_reset_req.reset_n
		input  wire [27:0] f2h_stm_hw_events_stm_hwevents,           //                   f2h_stm_hw_events.stm_hwevents
		input  wire        f2h_warm_reset_req_reset_n,               //                  f2h_warm_reset_req.reset_n
		output wire        hps_fpga_reset_reset,                     //                      hps_fpga_reset.reset
		output wire        hps_io_hps_io_phery_emac0_TX_CLK,         //                              hps_io.hps_io_phery_emac0_TX_CLK
		output wire        hps_io_hps_io_phery_emac0_TXD0,           //                                    .hps_io_phery_emac0_TXD0
		output wire        hps_io_hps_io_phery_emac0_TXD1,           //                                    .hps_io_phery_emac0_TXD1
		output wire        hps_io_hps_io_phery_emac0_TXD2,           //                                    .hps_io_phery_emac0_TXD2
		output wire        hps_io_hps_io_phery_emac0_TXD3,           //                                    .hps_io_phery_emac0_TXD3
		input  wire        hps_io_hps_io_phery_emac0_RX_CTL,         //                                    .hps_io_phery_emac0_RX_CTL
		output wire        hps_io_hps_io_phery_emac0_TX_CTL,         //                                    .hps_io_phery_emac0_TX_CTL
		input  wire        hps_io_hps_io_phery_emac0_RX_CLK,         //                                    .hps_io_phery_emac0_RX_CLK
		input  wire        hps_io_hps_io_phery_emac0_RXD0,           //                                    .hps_io_phery_emac0_RXD0
		input  wire        hps_io_hps_io_phery_emac0_RXD1,           //                                    .hps_io_phery_emac0_RXD1
		input  wire        hps_io_hps_io_phery_emac0_RXD2,           //                                    .hps_io_phery_emac0_RXD2
		input  wire        hps_io_hps_io_phery_emac0_RXD3,           //                                    .hps_io_phery_emac0_RXD3
		inout  wire        hps_io_hps_io_phery_emac0_MDIO,           //                                    .hps_io_phery_emac0_MDIO
		output wire        hps_io_hps_io_phery_emac0_MDC,            //                                    .hps_io_phery_emac0_MDC
		inout  wire        hps_io_hps_io_phery_sdmmc_CMD,            //                                    .hps_io_phery_sdmmc_CMD
		inout  wire        hps_io_hps_io_phery_sdmmc_D0,             //                                    .hps_io_phery_sdmmc_D0
		inout  wire        hps_io_hps_io_phery_sdmmc_D1,             //                                    .hps_io_phery_sdmmc_D1
		inout  wire        hps_io_hps_io_phery_sdmmc_D2,             //                                    .hps_io_phery_sdmmc_D2
		inout  wire        hps_io_hps_io_phery_sdmmc_D3,             //                                    .hps_io_phery_sdmmc_D3
		output wire        hps_io_hps_io_phery_sdmmc_CCLK,           //                                    .hps_io_phery_sdmmc_CCLK
		inout  wire        hps_io_hps_io_phery_usb0_DATA0,           //                                    .hps_io_phery_usb0_DATA0
		inout  wire        hps_io_hps_io_phery_usb0_DATA1,           //                                    .hps_io_phery_usb0_DATA1
		inout  wire        hps_io_hps_io_phery_usb0_DATA2,           //                                    .hps_io_phery_usb0_DATA2
		inout  wire        hps_io_hps_io_phery_usb0_DATA3,           //                                    .hps_io_phery_usb0_DATA3
		inout  wire        hps_io_hps_io_phery_usb0_DATA4,           //                                    .hps_io_phery_usb0_DATA4
		inout  wire        hps_io_hps_io_phery_usb0_DATA5,           //                                    .hps_io_phery_usb0_DATA5
		inout  wire        hps_io_hps_io_phery_usb0_DATA6,           //                                    .hps_io_phery_usb0_DATA6
		inout  wire        hps_io_hps_io_phery_usb0_DATA7,           //                                    .hps_io_phery_usb0_DATA7
		input  wire        hps_io_hps_io_phery_usb0_CLK,             //                                    .hps_io_phery_usb0_CLK
		output wire        hps_io_hps_io_phery_usb0_STP,             //                                    .hps_io_phery_usb0_STP
		input  wire        hps_io_hps_io_phery_usb0_DIR,             //                                    .hps_io_phery_usb0_DIR
		input  wire        hps_io_hps_io_phery_usb0_NXT,             //                                    .hps_io_phery_usb0_NXT
		input  wire        hps_io_hps_io_phery_uart1_RX,             //                                    .hps_io_phery_uart1_RX
		output wire        hps_io_hps_io_phery_uart1_TX,             //                                    .hps_io_phery_uart1_TX
		inout  wire        hps_io_hps_io_phery_i2c0_SDA,             //                                    .hps_io_phery_i2c0_SDA
		inout  wire        hps_io_hps_io_phery_i2c0_SCL,             //                                    .hps_io_phery_i2c0_SCL
		inout  wire        hps_io_hps_io_gpio_gpio2_io8,             //                                    .hps_io_gpio_gpio2_io8
		inout  wire        hps_io_hps_io_gpio_gpio2_io9,             //                                    .hps_io_gpio_gpio2_io9
		inout  wire        hps_io_hps_io_gpio_gpio2_io10,            //                                    .hps_io_gpio_gpio2_io10
		inout  wire        hps_io_hps_io_gpio_gpio2_io11,            //                                    .hps_io_gpio_gpio2_io11
		inout  wire        hps_io_hps_io_gpio_gpio1_io1,             //                                    .hps_io_gpio_gpio1_io1
		inout  wire        hps_io_hps_io_gpio_gpio1_io4,             //                                    .hps_io_gpio_gpio1_io4
		output wire [2:0]  issp_hps_resets_source,                   //                     issp_hps_resets.source
		output wire [1:0]  led_pio_external_connection_export,       //         led_pio_external_connection.export
		input  wire        reset_reset_n                             //                               reset.reset_n
	);

	wire           dc_fifo_1_out_valid;                                     // dc_fifo_1:out_valid -> msgdma_1:st_sink_valid
	wire    [31:0] dc_fifo_1_out_data;                                      // dc_fifo_1:out_data -> msgdma_1:st_sink_data
	wire           dc_fifo_1_out_ready;                                     // msgdma_1:st_sink_ready -> dc_fifo_1:out_ready
	wire           msgdma_0_st_source_valid;                                // msgdma_0:st_source_valid -> dc_fifo_0:in_valid
	wire    [31:0] msgdma_0_st_source_data;                                 // msgdma_0:st_source_data -> dc_fifo_0:in_data
	wire           msgdma_0_st_source_ready;                                // dc_fifo_0:in_ready -> msgdma_0:st_source_ready
	wire     [1:0] arria10_hps_emif_gp_to_emif;                             // arria10_hps:emif_gp_to_emif -> emif_a10_hps:hps_to_emif_gp
	wire  [4095:0] emif_a10_hps_hps_emif_conduit_end_emif_to_hps;           // emif_a10_hps:emif_to_hps -> arria10_hps:emif_emif_to_hps
	wire     [0:0] emif_a10_hps_hps_emif_conduit_end_emif_to_gp;            // emif_a10_hps:emif_to_hps_gp -> arria10_hps:emif_emif_to_gp
	wire  [4095:0] arria10_hps_emif_hps_to_emif;                            // arria10_hps:emif_hps_to_emif -> emif_a10_hps:hps_to_emif
	wire     [1:0] arria10_hps_h2f_axi_master_awburst;                      // arria10_hps:h2f_AWBURST -> mm_interconnect_0:arria10_hps_h2f_axi_master_awburst
	wire     [4:0] arria10_hps_h2f_axi_master_awuser;                       // arria10_hps:h2f_AWUSER -> mm_interconnect_0:arria10_hps_h2f_axi_master_awuser
	wire     [3:0] arria10_hps_h2f_axi_master_arlen;                        // arria10_hps:h2f_ARLEN -> mm_interconnect_0:arria10_hps_h2f_axi_master_arlen
	wire     [7:0] arria10_hps_h2f_axi_master_wstrb;                        // arria10_hps:h2f_WSTRB -> mm_interconnect_0:arria10_hps_h2f_axi_master_wstrb
	wire           arria10_hps_h2f_axi_master_wready;                       // mm_interconnect_0:arria10_hps_h2f_axi_master_wready -> arria10_hps:h2f_WREADY
	wire     [3:0] arria10_hps_h2f_axi_master_rid;                          // mm_interconnect_0:arria10_hps_h2f_axi_master_rid -> arria10_hps:h2f_RID
	wire           arria10_hps_h2f_axi_master_rready;                       // arria10_hps:h2f_RREADY -> mm_interconnect_0:arria10_hps_h2f_axi_master_rready
	wire     [3:0] arria10_hps_h2f_axi_master_awlen;                        // arria10_hps:h2f_AWLEN -> mm_interconnect_0:arria10_hps_h2f_axi_master_awlen
	wire     [3:0] arria10_hps_h2f_axi_master_wid;                          // arria10_hps:h2f_WID -> mm_interconnect_0:arria10_hps_h2f_axi_master_wid
	wire     [3:0] arria10_hps_h2f_axi_master_arcache;                      // arria10_hps:h2f_ARCACHE -> mm_interconnect_0:arria10_hps_h2f_axi_master_arcache
	wire           arria10_hps_h2f_axi_master_wvalid;                       // arria10_hps:h2f_WVALID -> mm_interconnect_0:arria10_hps_h2f_axi_master_wvalid
	wire    [31:0] arria10_hps_h2f_axi_master_araddr;                       // arria10_hps:h2f_ARADDR -> mm_interconnect_0:arria10_hps_h2f_axi_master_araddr
	wire     [2:0] arria10_hps_h2f_axi_master_arprot;                       // arria10_hps:h2f_ARPROT -> mm_interconnect_0:arria10_hps_h2f_axi_master_arprot
	wire     [2:0] arria10_hps_h2f_axi_master_awprot;                       // arria10_hps:h2f_AWPROT -> mm_interconnect_0:arria10_hps_h2f_axi_master_awprot
	wire    [63:0] arria10_hps_h2f_axi_master_wdata;                        // arria10_hps:h2f_WDATA -> mm_interconnect_0:arria10_hps_h2f_axi_master_wdata
	wire           arria10_hps_h2f_axi_master_arvalid;                      // arria10_hps:h2f_ARVALID -> mm_interconnect_0:arria10_hps_h2f_axi_master_arvalid
	wire     [3:0] arria10_hps_h2f_axi_master_awcache;                      // arria10_hps:h2f_AWCACHE -> mm_interconnect_0:arria10_hps_h2f_axi_master_awcache
	wire     [3:0] arria10_hps_h2f_axi_master_arid;                         // arria10_hps:h2f_ARID -> mm_interconnect_0:arria10_hps_h2f_axi_master_arid
	wire     [1:0] arria10_hps_h2f_axi_master_arlock;                       // arria10_hps:h2f_ARLOCK -> mm_interconnect_0:arria10_hps_h2f_axi_master_arlock
	wire     [1:0] arria10_hps_h2f_axi_master_awlock;                       // arria10_hps:h2f_AWLOCK -> mm_interconnect_0:arria10_hps_h2f_axi_master_awlock
	wire    [31:0] arria10_hps_h2f_axi_master_awaddr;                       // arria10_hps:h2f_AWADDR -> mm_interconnect_0:arria10_hps_h2f_axi_master_awaddr
	wire     [1:0] arria10_hps_h2f_axi_master_bresp;                        // mm_interconnect_0:arria10_hps_h2f_axi_master_bresp -> arria10_hps:h2f_BRESP
	wire           arria10_hps_h2f_axi_master_arready;                      // mm_interconnect_0:arria10_hps_h2f_axi_master_arready -> arria10_hps:h2f_ARREADY
	wire    [63:0] arria10_hps_h2f_axi_master_rdata;                        // mm_interconnect_0:arria10_hps_h2f_axi_master_rdata -> arria10_hps:h2f_RDATA
	wire           arria10_hps_h2f_axi_master_awready;                      // mm_interconnect_0:arria10_hps_h2f_axi_master_awready -> arria10_hps:h2f_AWREADY
	wire     [1:0] arria10_hps_h2f_axi_master_arburst;                      // arria10_hps:h2f_ARBURST -> mm_interconnect_0:arria10_hps_h2f_axi_master_arburst
	wire     [2:0] arria10_hps_h2f_axi_master_arsize;                       // arria10_hps:h2f_ARSIZE -> mm_interconnect_0:arria10_hps_h2f_axi_master_arsize
	wire           arria10_hps_h2f_axi_master_bready;                       // arria10_hps:h2f_BREADY -> mm_interconnect_0:arria10_hps_h2f_axi_master_bready
	wire           arria10_hps_h2f_axi_master_rlast;                        // mm_interconnect_0:arria10_hps_h2f_axi_master_rlast -> arria10_hps:h2f_RLAST
	wire           arria10_hps_h2f_axi_master_wlast;                        // arria10_hps:h2f_WLAST -> mm_interconnect_0:arria10_hps_h2f_axi_master_wlast
	wire     [1:0] arria10_hps_h2f_axi_master_rresp;                        // mm_interconnect_0:arria10_hps_h2f_axi_master_rresp -> arria10_hps:h2f_RRESP
	wire     [3:0] arria10_hps_h2f_axi_master_awid;                         // arria10_hps:h2f_AWID -> mm_interconnect_0:arria10_hps_h2f_axi_master_awid
	wire     [3:0] arria10_hps_h2f_axi_master_bid;                          // mm_interconnect_0:arria10_hps_h2f_axi_master_bid -> arria10_hps:h2f_BID
	wire           arria10_hps_h2f_axi_master_bvalid;                       // mm_interconnect_0:arria10_hps_h2f_axi_master_bvalid -> arria10_hps:h2f_BVALID
	wire     [2:0] arria10_hps_h2f_axi_master_awsize;                       // arria10_hps:h2f_AWSIZE -> mm_interconnect_0:arria10_hps_h2f_axi_master_awsize
	wire           arria10_hps_h2f_axi_master_awvalid;                      // arria10_hps:h2f_AWVALID -> mm_interconnect_0:arria10_hps_h2f_axi_master_awvalid
	wire     [4:0] arria10_hps_h2f_axi_master_aruser;                       // arria10_hps:h2f_ARUSER -> mm_interconnect_0:arria10_hps_h2f_axi_master_aruser
	wire           arria10_hps_h2f_axi_master_rvalid;                       // mm_interconnect_0:arria10_hps_h2f_axi_master_rvalid -> arria10_hps:h2f_RVALID
	wire    [31:0] mm_interconnect_0_msgdma_0_csr_readdata;                 // msgdma_0:csr_readdata -> mm_interconnect_0:msgdma_0_csr_readdata
	wire     [2:0] mm_interconnect_0_msgdma_0_csr_address;                  // mm_interconnect_0:msgdma_0_csr_address -> msgdma_0:csr_address
	wire           mm_interconnect_0_msgdma_0_csr_read;                     // mm_interconnect_0:msgdma_0_csr_read -> msgdma_0:csr_read
	wire     [3:0] mm_interconnect_0_msgdma_0_csr_byteenable;               // mm_interconnect_0:msgdma_0_csr_byteenable -> msgdma_0:csr_byteenable
	wire           mm_interconnect_0_msgdma_0_csr_write;                    // mm_interconnect_0:msgdma_0_csr_write -> msgdma_0:csr_write
	wire    [31:0] mm_interconnect_0_msgdma_0_csr_writedata;                // mm_interconnect_0:msgdma_0_csr_writedata -> msgdma_0:csr_writedata
	wire    [31:0] mm_interconnect_0_msgdma_1_csr_readdata;                 // msgdma_1:csr_readdata -> mm_interconnect_0:msgdma_1_csr_readdata
	wire     [2:0] mm_interconnect_0_msgdma_1_csr_address;                  // mm_interconnect_0:msgdma_1_csr_address -> msgdma_1:csr_address
	wire           mm_interconnect_0_msgdma_1_csr_read;                     // mm_interconnect_0:msgdma_1_csr_read -> msgdma_1:csr_read
	wire     [3:0] mm_interconnect_0_msgdma_1_csr_byteenable;               // mm_interconnect_0:msgdma_1_csr_byteenable -> msgdma_1:csr_byteenable
	wire           mm_interconnect_0_msgdma_1_csr_write;                    // mm_interconnect_0:msgdma_1_csr_write -> msgdma_1:csr_write
	wire    [31:0] mm_interconnect_0_msgdma_1_csr_writedata;                // mm_interconnect_0:msgdma_1_csr_writedata -> msgdma_1:csr_writedata
	wire           mm_interconnect_0_msgdma_0_descriptor_slave_waitrequest; // msgdma_0:descriptor_slave_waitrequest -> mm_interconnect_0:msgdma_0_descriptor_slave_waitrequest
	wire    [15:0] mm_interconnect_0_msgdma_0_descriptor_slave_byteenable;  // mm_interconnect_0:msgdma_0_descriptor_slave_byteenable -> msgdma_0:descriptor_slave_byteenable
	wire           mm_interconnect_0_msgdma_0_descriptor_slave_write;       // mm_interconnect_0:msgdma_0_descriptor_slave_write -> msgdma_0:descriptor_slave_write
	wire   [127:0] mm_interconnect_0_msgdma_0_descriptor_slave_writedata;   // mm_interconnect_0:msgdma_0_descriptor_slave_writedata -> msgdma_0:descriptor_slave_writedata
	wire           mm_interconnect_0_msgdma_1_descriptor_slave_waitrequest; // msgdma_1:descriptor_slave_waitrequest -> mm_interconnect_0:msgdma_1_descriptor_slave_waitrequest
	wire    [15:0] mm_interconnect_0_msgdma_1_descriptor_slave_byteenable;  // mm_interconnect_0:msgdma_1_descriptor_slave_byteenable -> msgdma_1:descriptor_slave_byteenable
	wire           mm_interconnect_0_msgdma_1_descriptor_slave_write;       // mm_interconnect_0:msgdma_1_descriptor_slave_write -> msgdma_1:descriptor_slave_write
	wire   [127:0] mm_interconnect_0_msgdma_1_descriptor_slave_writedata;   // mm_interconnect_0:msgdma_1_descriptor_slave_writedata -> msgdma_1:descriptor_slave_writedata
	wire           mm_interconnect_0_onchip_memory2_s1_chipselect;          // mm_interconnect_0:onchip_memory2_s1_chipselect -> onchip_memory2:chipselect
	wire     [7:0] mm_interconnect_0_onchip_memory2_s1_readdata;            // onchip_memory2:readdata -> mm_interconnect_0:onchip_memory2_s1_readdata
	wire    [17:0] mm_interconnect_0_onchip_memory2_s1_address;             // mm_interconnect_0:onchip_memory2_s1_address -> onchip_memory2:address
	wire           mm_interconnect_0_onchip_memory2_s1_write;               // mm_interconnect_0:onchip_memory2_s1_write -> onchip_memory2:write
	wire     [7:0] mm_interconnect_0_onchip_memory2_s1_writedata;           // mm_interconnect_0:onchip_memory2_s1_writedata -> onchip_memory2:writedata
	wire           mm_interconnect_0_onchip_memory2_s1_clken;               // mm_interconnect_0:onchip_memory2_s1_clken -> onchip_memory2:clken
	wire     [1:0] arria10_hps_h2f_lw_axi_master_awburst;                   // arria10_hps:h2f_lw_AWBURST -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awburst
	wire     [4:0] arria10_hps_h2f_lw_axi_master_awuser;                    // arria10_hps:h2f_lw_AWUSER -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awuser
	wire     [3:0] arria10_hps_h2f_lw_axi_master_arlen;                     // arria10_hps:h2f_lw_ARLEN -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arlen
	wire     [3:0] arria10_hps_h2f_lw_axi_master_wstrb;                     // arria10_hps:h2f_lw_WSTRB -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_wstrb
	wire           arria10_hps_h2f_lw_axi_master_wready;                    // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_wready -> arria10_hps:h2f_lw_WREADY
	wire     [3:0] arria10_hps_h2f_lw_axi_master_rid;                       // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_rid -> arria10_hps:h2f_lw_RID
	wire           arria10_hps_h2f_lw_axi_master_rready;                    // arria10_hps:h2f_lw_RREADY -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_rready
	wire     [3:0] arria10_hps_h2f_lw_axi_master_awlen;                     // arria10_hps:h2f_lw_AWLEN -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awlen
	wire     [3:0] arria10_hps_h2f_lw_axi_master_wid;                       // arria10_hps:h2f_lw_WID -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_wid
	wire     [3:0] arria10_hps_h2f_lw_axi_master_arcache;                   // arria10_hps:h2f_lw_ARCACHE -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arcache
	wire           arria10_hps_h2f_lw_axi_master_wvalid;                    // arria10_hps:h2f_lw_WVALID -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_wvalid
	wire    [20:0] arria10_hps_h2f_lw_axi_master_araddr;                    // arria10_hps:h2f_lw_ARADDR -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_araddr
	wire     [2:0] arria10_hps_h2f_lw_axi_master_arprot;                    // arria10_hps:h2f_lw_ARPROT -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arprot
	wire     [2:0] arria10_hps_h2f_lw_axi_master_awprot;                    // arria10_hps:h2f_lw_AWPROT -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awprot
	wire    [31:0] arria10_hps_h2f_lw_axi_master_wdata;                     // arria10_hps:h2f_lw_WDATA -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_wdata
	wire           arria10_hps_h2f_lw_axi_master_arvalid;                   // arria10_hps:h2f_lw_ARVALID -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arvalid
	wire     [3:0] arria10_hps_h2f_lw_axi_master_awcache;                   // arria10_hps:h2f_lw_AWCACHE -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awcache
	wire     [3:0] arria10_hps_h2f_lw_axi_master_arid;                      // arria10_hps:h2f_lw_ARID -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arid
	wire     [1:0] arria10_hps_h2f_lw_axi_master_arlock;                    // arria10_hps:h2f_lw_ARLOCK -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arlock
	wire     [1:0] arria10_hps_h2f_lw_axi_master_awlock;                    // arria10_hps:h2f_lw_AWLOCK -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awlock
	wire    [20:0] arria10_hps_h2f_lw_axi_master_awaddr;                    // arria10_hps:h2f_lw_AWADDR -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awaddr
	wire     [1:0] arria10_hps_h2f_lw_axi_master_bresp;                     // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_bresp -> arria10_hps:h2f_lw_BRESP
	wire           arria10_hps_h2f_lw_axi_master_arready;                   // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arready -> arria10_hps:h2f_lw_ARREADY
	wire    [31:0] arria10_hps_h2f_lw_axi_master_rdata;                     // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_rdata -> arria10_hps:h2f_lw_RDATA
	wire           arria10_hps_h2f_lw_axi_master_awready;                   // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awready -> arria10_hps:h2f_lw_AWREADY
	wire     [1:0] arria10_hps_h2f_lw_axi_master_arburst;                   // arria10_hps:h2f_lw_ARBURST -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arburst
	wire     [2:0] arria10_hps_h2f_lw_axi_master_arsize;                    // arria10_hps:h2f_lw_ARSIZE -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_arsize
	wire           arria10_hps_h2f_lw_axi_master_bready;                    // arria10_hps:h2f_lw_BREADY -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_bready
	wire           arria10_hps_h2f_lw_axi_master_rlast;                     // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_rlast -> arria10_hps:h2f_lw_RLAST
	wire           arria10_hps_h2f_lw_axi_master_wlast;                     // arria10_hps:h2f_lw_WLAST -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_wlast
	wire     [1:0] arria10_hps_h2f_lw_axi_master_rresp;                     // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_rresp -> arria10_hps:h2f_lw_RRESP
	wire     [3:0] arria10_hps_h2f_lw_axi_master_awid;                      // arria10_hps:h2f_lw_AWID -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awid
	wire     [3:0] arria10_hps_h2f_lw_axi_master_bid;                       // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_bid -> arria10_hps:h2f_lw_BID
	wire           arria10_hps_h2f_lw_axi_master_bvalid;                    // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_bvalid -> arria10_hps:h2f_lw_BVALID
	wire     [2:0] arria10_hps_h2f_lw_axi_master_awsize;                    // arria10_hps:h2f_lw_AWSIZE -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awsize
	wire           arria10_hps_h2f_lw_axi_master_awvalid;                   // arria10_hps:h2f_lw_AWVALID -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_awvalid
	wire     [4:0] arria10_hps_h2f_lw_axi_master_aruser;                    // arria10_hps:h2f_lw_ARUSER -> mm_interconnect_1:arria10_hps_h2f_lw_axi_master_aruser
	wire           arria10_hps_h2f_lw_axi_master_rvalid;                    // mm_interconnect_1:arria10_hps_h2f_lw_axi_master_rvalid -> arria10_hps:h2f_lw_RVALID
	wire    [31:0] fpga_m_master_readdata;                                  // mm_interconnect_1:fpga_m_master_readdata -> fpga_m:master_readdata
	wire           fpga_m_master_waitrequest;                               // mm_interconnect_1:fpga_m_master_waitrequest -> fpga_m:master_waitrequest
	wire    [31:0] fpga_m_master_address;                                   // fpga_m:master_address -> mm_interconnect_1:fpga_m_master_address
	wire           fpga_m_master_read;                                      // fpga_m:master_read -> mm_interconnect_1:fpga_m_master_read
	wire     [3:0] fpga_m_master_byteenable;                                // fpga_m:master_byteenable -> mm_interconnect_1:fpga_m_master_byteenable
	wire           fpga_m_master_readdatavalid;                             // mm_interconnect_1:fpga_m_master_readdatavalid -> fpga_m:master_readdatavalid
	wire           fpga_m_master_write;                                     // fpga_m:master_write -> mm_interconnect_1:fpga_m_master_write
	wire    [31:0] fpga_m_master_writedata;                                 // fpga_m:master_writedata -> mm_interconnect_1:fpga_m_master_writedata
	wire    [31:0] mm_interconnect_1_pb_lwh2f_s0_readdata;                  // pb_lwh2f:s0_readdata -> mm_interconnect_1:pb_lwh2f_s0_readdata
	wire           mm_interconnect_1_pb_lwh2f_s0_waitrequest;               // pb_lwh2f:s0_waitrequest -> mm_interconnect_1:pb_lwh2f_s0_waitrequest
	wire           mm_interconnect_1_pb_lwh2f_s0_debugaccess;               // mm_interconnect_1:pb_lwh2f_s0_debugaccess -> pb_lwh2f:s0_debugaccess
	wire     [8:0] mm_interconnect_1_pb_lwh2f_s0_address;                   // mm_interconnect_1:pb_lwh2f_s0_address -> pb_lwh2f:s0_address
	wire           mm_interconnect_1_pb_lwh2f_s0_read;                      // mm_interconnect_1:pb_lwh2f_s0_read -> pb_lwh2f:s0_read
	wire     [3:0] mm_interconnect_1_pb_lwh2f_s0_byteenable;                // mm_interconnect_1:pb_lwh2f_s0_byteenable -> pb_lwh2f:s0_byteenable
	wire           mm_interconnect_1_pb_lwh2f_s0_readdatavalid;             // pb_lwh2f:s0_readdatavalid -> mm_interconnect_1:pb_lwh2f_s0_readdatavalid
	wire           mm_interconnect_1_pb_lwh2f_s0_write;                     // mm_interconnect_1:pb_lwh2f_s0_write -> pb_lwh2f:s0_write
	wire    [31:0] mm_interconnect_1_pb_lwh2f_s0_writedata;                 // mm_interconnect_1:pb_lwh2f_s0_writedata -> pb_lwh2f:s0_writedata
	wire     [0:0] mm_interconnect_1_pb_lwh2f_s0_burstcount;                // mm_interconnect_1:pb_lwh2f_s0_burstcount -> pb_lwh2f:s0_burstcount
	wire           pb_lwh2f_m0_waitrequest;                                 // mm_interconnect_2:pb_lwh2f_m0_waitrequest -> pb_lwh2f:m0_waitrequest
	wire    [31:0] pb_lwh2f_m0_readdata;                                    // mm_interconnect_2:pb_lwh2f_m0_readdata -> pb_lwh2f:m0_readdata
	wire           pb_lwh2f_m0_debugaccess;                                 // pb_lwh2f:m0_debugaccess -> mm_interconnect_2:pb_lwh2f_m0_debugaccess
	wire     [8:0] pb_lwh2f_m0_address;                                     // pb_lwh2f:m0_address -> mm_interconnect_2:pb_lwh2f_m0_address
	wire           pb_lwh2f_m0_read;                                        // pb_lwh2f:m0_read -> mm_interconnect_2:pb_lwh2f_m0_read
	wire     [3:0] pb_lwh2f_m0_byteenable;                                  // pb_lwh2f:m0_byteenable -> mm_interconnect_2:pb_lwh2f_m0_byteenable
	wire           pb_lwh2f_m0_readdatavalid;                               // mm_interconnect_2:pb_lwh2f_m0_readdatavalid -> pb_lwh2f:m0_readdatavalid
	wire    [31:0] pb_lwh2f_m0_writedata;                                   // pb_lwh2f:m0_writedata -> mm_interconnect_2:pb_lwh2f_m0_writedata
	wire           pb_lwh2f_m0_write;                                       // pb_lwh2f:m0_write -> mm_interconnect_2:pb_lwh2f_m0_write
	wire     [0:0] pb_lwh2f_m0_burstcount;                                  // pb_lwh2f:m0_burstcount -> mm_interconnect_2:pb_lwh2f_m0_burstcount
	wire    [31:0] mm_interconnect_2_ilc_avalon_slave_readdata;             // ILC:avmm_rddata -> mm_interconnect_2:ILC_avalon_slave_readdata
	wire     [5:0] mm_interconnect_2_ilc_avalon_slave_address;              // mm_interconnect_2:ILC_avalon_slave_address -> ILC:avmm_addr
	wire           mm_interconnect_2_ilc_avalon_slave_read;                 // mm_interconnect_2:ILC_avalon_slave_read -> ILC:avmm_read
	wire           mm_interconnect_2_ilc_avalon_slave_write;                // mm_interconnect_2:ILC_avalon_slave_write -> ILC:avmm_write
	wire    [31:0] mm_interconnect_2_ilc_avalon_slave_writedata;            // mm_interconnect_2:ILC_avalon_slave_writedata -> ILC:avmm_wrdata
	wire    [31:0] mm_interconnect_2_sysid_qsys_control_slave_readdata;     // sysid_qsys:readdata -> mm_interconnect_2:sysid_qsys_control_slave_readdata
	wire     [0:0] mm_interconnect_2_sysid_qsys_control_slave_address;      // mm_interconnect_2:sysid_qsys_control_slave_address -> sysid_qsys:address
	wire           mm_interconnect_2_led_pio_s1_chipselect;                 // mm_interconnect_2:led_pio_s1_chipselect -> led_pio:chipselect
	wire    [31:0] mm_interconnect_2_led_pio_s1_readdata;                   // led_pio:readdata -> mm_interconnect_2:led_pio_s1_readdata
	wire     [1:0] mm_interconnect_2_led_pio_s1_address;                    // mm_interconnect_2:led_pio_s1_address -> led_pio:address
	wire           mm_interconnect_2_led_pio_s1_write;                      // mm_interconnect_2:led_pio_s1_write -> led_pio:write_n
	wire    [31:0] mm_interconnect_2_led_pio_s1_writedata;                  // mm_interconnect_2:led_pio_s1_writedata -> led_pio:writedata
	wire           mm_interconnect_2_button_pio_s1_chipselect;              // mm_interconnect_2:button_pio_s1_chipselect -> button_pio:chipselect
	wire    [31:0] mm_interconnect_2_button_pio_s1_readdata;                // button_pio:readdata -> mm_interconnect_2:button_pio_s1_readdata
	wire     [1:0] mm_interconnect_2_button_pio_s1_address;                 // mm_interconnect_2:button_pio_s1_address -> button_pio:address
	wire           mm_interconnect_2_button_pio_s1_write;                   // mm_interconnect_2:button_pio_s1_write -> button_pio:write_n
	wire    [31:0] mm_interconnect_2_button_pio_s1_writedata;               // mm_interconnect_2:button_pio_s1_writedata -> button_pio:writedata
	wire           mm_interconnect_2_dipsw_pio_s1_chipselect;               // mm_interconnect_2:dipsw_pio_s1_chipselect -> dipsw_pio:chipselect
	wire    [31:0] mm_interconnect_2_dipsw_pio_s1_readdata;                 // dipsw_pio:readdata -> mm_interconnect_2:dipsw_pio_s1_readdata
	wire     [1:0] mm_interconnect_2_dipsw_pio_s1_address;                  // mm_interconnect_2:dipsw_pio_s1_address -> dipsw_pio:address
	wire           mm_interconnect_2_dipsw_pio_s1_write;                    // mm_interconnect_2:dipsw_pio_s1_write -> dipsw_pio:write_n
	wire    [31:0] mm_interconnect_2_dipsw_pio_s1_writedata;                // mm_interconnect_2:dipsw_pio_s1_writedata -> dipsw_pio:writedata
	wire    [31:0] hps_m_master_readdata;                                   // mm_interconnect_3:hps_m_master_readdata -> hps_m:master_readdata
	wire           hps_m_master_waitrequest;                                // mm_interconnect_3:hps_m_master_waitrequest -> hps_m:master_waitrequest
	wire    [31:0] hps_m_master_address;                                    // hps_m:master_address -> mm_interconnect_3:hps_m_master_address
	wire           hps_m_master_read;                                       // hps_m:master_read -> mm_interconnect_3:hps_m_master_read
	wire     [3:0] hps_m_master_byteenable;                                 // hps_m:master_byteenable -> mm_interconnect_3:hps_m_master_byteenable
	wire           hps_m_master_readdatavalid;                              // mm_interconnect_3:hps_m_master_readdatavalid -> hps_m:master_readdatavalid
	wire           hps_m_master_write;                                      // hps_m:master_write -> mm_interconnect_3:hps_m_master_write
	wire    [31:0] hps_m_master_writedata;                                  // hps_m:master_writedata -> mm_interconnect_3:hps_m_master_writedata
	wire    [31:0] msgdma_0_mm_read_readdata;                               // mm_interconnect_3:msgdma_0_mm_read_readdata -> msgdma_0:mm_read_readdata
	wire           msgdma_0_mm_read_waitrequest;                            // mm_interconnect_3:msgdma_0_mm_read_waitrequest -> msgdma_0:mm_read_waitrequest
	wire    [31:0] msgdma_0_mm_read_address;                                // msgdma_0:mm_read_address -> mm_interconnect_3:msgdma_0_mm_read_address
	wire           msgdma_0_mm_read_read;                                   // msgdma_0:mm_read_read -> mm_interconnect_3:msgdma_0_mm_read_read
	wire     [3:0] msgdma_0_mm_read_byteenable;                             // msgdma_0:mm_read_byteenable -> mm_interconnect_3:msgdma_0_mm_read_byteenable
	wire           msgdma_0_mm_read_readdatavalid;                          // mm_interconnect_3:msgdma_0_mm_read_readdatavalid -> msgdma_0:mm_read_readdatavalid
	wire           msgdma_1_mm_write_waitrequest;                           // mm_interconnect_3:msgdma_1_mm_write_waitrequest -> msgdma_1:mm_write_waitrequest
	wire    [31:0] msgdma_1_mm_write_address;                               // msgdma_1:mm_write_address -> mm_interconnect_3:msgdma_1_mm_write_address
	wire     [3:0] msgdma_1_mm_write_byteenable;                            // msgdma_1:mm_write_byteenable -> mm_interconnect_3:msgdma_1_mm_write_byteenable
	wire           msgdma_1_mm_write_write;                                 // msgdma_1:mm_write_write -> mm_interconnect_3:msgdma_1_mm_write_write
	wire    [31:0] msgdma_1_mm_write_writedata;                             // msgdma_1:mm_write_writedata -> mm_interconnect_3:msgdma_1_mm_write_writedata
	wire     [1:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awburst;     // mm_interconnect_3:arria10_hps_f2h_axi_slave_awburst -> arria10_hps:f2h_AWBURST
	wire     [4:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awuser;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_awuser -> arria10_hps:f2h_AWUSER
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_arlen;       // mm_interconnect_3:arria10_hps_f2h_axi_slave_arlen -> arria10_hps:f2h_ARLEN
	wire     [7:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_wstrb;       // mm_interconnect_3:arria10_hps_f2h_axi_slave_wstrb -> arria10_hps:f2h_WSTRB
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_wready;      // arria10_hps:f2h_WREADY -> mm_interconnect_3:arria10_hps_f2h_axi_slave_wready
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_rid;         // arria10_hps:f2h_RID -> mm_interconnect_3:arria10_hps_f2h_axi_slave_rid
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_rready;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_rready -> arria10_hps:f2h_RREADY
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awlen;       // mm_interconnect_3:arria10_hps_f2h_axi_slave_awlen -> arria10_hps:f2h_AWLEN
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_wid;         // mm_interconnect_3:arria10_hps_f2h_axi_slave_wid -> arria10_hps:f2h_WID
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_arcache;     // mm_interconnect_3:arria10_hps_f2h_axi_slave_arcache -> arria10_hps:f2h_ARCACHE
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_wvalid;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_wvalid -> arria10_hps:f2h_WVALID
	wire    [31:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_araddr;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_araddr -> arria10_hps:f2h_ARADDR
	wire     [2:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_arprot;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_arprot -> arria10_hps:f2h_ARPROT
	wire     [2:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awprot;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_awprot -> arria10_hps:f2h_AWPROT
	wire    [63:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_wdata;       // mm_interconnect_3:arria10_hps_f2h_axi_slave_wdata -> arria10_hps:f2h_WDATA
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_arvalid;     // mm_interconnect_3:arria10_hps_f2h_axi_slave_arvalid -> arria10_hps:f2h_ARVALID
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awcache;     // mm_interconnect_3:arria10_hps_f2h_axi_slave_awcache -> arria10_hps:f2h_AWCACHE
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_arid;        // mm_interconnect_3:arria10_hps_f2h_axi_slave_arid -> arria10_hps:f2h_ARID
	wire     [1:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_arlock;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_arlock -> arria10_hps:f2h_ARLOCK
	wire     [1:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awlock;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_awlock -> arria10_hps:f2h_AWLOCK
	wire    [31:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awaddr;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_awaddr -> arria10_hps:f2h_AWADDR
	wire     [1:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_bresp;       // arria10_hps:f2h_BRESP -> mm_interconnect_3:arria10_hps_f2h_axi_slave_bresp
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_arready;     // arria10_hps:f2h_ARREADY -> mm_interconnect_3:arria10_hps_f2h_axi_slave_arready
	wire    [63:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_rdata;       // arria10_hps:f2h_RDATA -> mm_interconnect_3:arria10_hps_f2h_axi_slave_rdata
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_awready;     // arria10_hps:f2h_AWREADY -> mm_interconnect_3:arria10_hps_f2h_axi_slave_awready
	wire     [1:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_arburst;     // mm_interconnect_3:arria10_hps_f2h_axi_slave_arburst -> arria10_hps:f2h_ARBURST
	wire     [2:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_arsize;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_arsize -> arria10_hps:f2h_ARSIZE
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_bready;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_bready -> arria10_hps:f2h_BREADY
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_rlast;       // arria10_hps:f2h_RLAST -> mm_interconnect_3:arria10_hps_f2h_axi_slave_rlast
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_wlast;       // mm_interconnect_3:arria10_hps_f2h_axi_slave_wlast -> arria10_hps:f2h_WLAST
	wire     [1:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_rresp;       // arria10_hps:f2h_RRESP -> mm_interconnect_3:arria10_hps_f2h_axi_slave_rresp
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awid;        // mm_interconnect_3:arria10_hps_f2h_axi_slave_awid -> arria10_hps:f2h_AWID
	wire     [3:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_bid;         // arria10_hps:f2h_BID -> mm_interconnect_3:arria10_hps_f2h_axi_slave_bid
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_bvalid;      // arria10_hps:f2h_BVALID -> mm_interconnect_3:arria10_hps_f2h_axi_slave_bvalid
	wire     [2:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_awsize;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_awsize -> arria10_hps:f2h_AWSIZE
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_awvalid;     // mm_interconnect_3:arria10_hps_f2h_axi_slave_awvalid -> arria10_hps:f2h_AWVALID
	wire     [4:0] mm_interconnect_3_arria10_hps_f2h_axi_slave_aruser;      // mm_interconnect_3:arria10_hps_f2h_axi_slave_aruser -> arria10_hps:f2h_ARUSER
	wire           mm_interconnect_3_arria10_hps_f2h_axi_slave_rvalid;      // arria10_hps:f2h_RVALID -> mm_interconnect_3:arria10_hps_f2h_axi_slave_rvalid
	wire    [31:0] f2sdram_m_master_readdata;                               // mm_interconnect_4:f2sdram_m_master_readdata -> f2sdram_m:master_readdata
	wire           f2sdram_m_master_waitrequest;                            // mm_interconnect_4:f2sdram_m_master_waitrequest -> f2sdram_m:master_waitrequest
	wire    [31:0] f2sdram_m_master_address;                                // f2sdram_m:master_address -> mm_interconnect_4:f2sdram_m_master_address
	wire           f2sdram_m_master_read;                                   // f2sdram_m:master_read -> mm_interconnect_4:f2sdram_m_master_read
	wire     [3:0] f2sdram_m_master_byteenable;                             // f2sdram_m:master_byteenable -> mm_interconnect_4:f2sdram_m_master_byteenable
	wire           f2sdram_m_master_readdatavalid;                          // mm_interconnect_4:f2sdram_m_master_readdatavalid -> f2sdram_m:master_readdatavalid
	wire           f2sdram_m_master_write;                                  // f2sdram_m:master_write -> mm_interconnect_4:f2sdram_m_master_write
	wire    [31:0] f2sdram_m_master_writedata;                              // f2sdram_m:master_writedata -> mm_interconnect_4:f2sdram_m_master_writedata
	wire     [1:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awburst;     // mm_interconnect_4:arria10_hps_f2sdram0_data_awburst -> arria10_hps:f2sdram0_AWBURST
	wire     [4:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awuser;      // mm_interconnect_4:arria10_hps_f2sdram0_data_awuser -> arria10_hps:f2sdram0_AWUSER
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_arlen;       // mm_interconnect_4:arria10_hps_f2sdram0_data_arlen -> arria10_hps:f2sdram0_ARLEN
	wire     [7:0] mm_interconnect_4_arria10_hps_f2sdram0_data_wstrb;       // mm_interconnect_4:arria10_hps_f2sdram0_data_wstrb -> arria10_hps:f2sdram0_WSTRB
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_wready;      // arria10_hps:f2sdram0_WREADY -> mm_interconnect_4:arria10_hps_f2sdram0_data_wready
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_rid;         // arria10_hps:f2sdram0_RID -> mm_interconnect_4:arria10_hps_f2sdram0_data_rid
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_rready;      // mm_interconnect_4:arria10_hps_f2sdram0_data_rready -> arria10_hps:f2sdram0_RREADY
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awlen;       // mm_interconnect_4:arria10_hps_f2sdram0_data_awlen -> arria10_hps:f2sdram0_AWLEN
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_wid;         // mm_interconnect_4:arria10_hps_f2sdram0_data_wid -> arria10_hps:f2sdram0_WID
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_arcache;     // mm_interconnect_4:arria10_hps_f2sdram0_data_arcache -> arria10_hps:f2sdram0_ARCACHE
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_wvalid;      // mm_interconnect_4:arria10_hps_f2sdram0_data_wvalid -> arria10_hps:f2sdram0_WVALID
	wire    [31:0] mm_interconnect_4_arria10_hps_f2sdram0_data_araddr;      // mm_interconnect_4:arria10_hps_f2sdram0_data_araddr -> arria10_hps:f2sdram0_ARADDR
	wire     [2:0] mm_interconnect_4_arria10_hps_f2sdram0_data_arprot;      // mm_interconnect_4:arria10_hps_f2sdram0_data_arprot -> arria10_hps:f2sdram0_ARPROT
	wire     [2:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awprot;      // mm_interconnect_4:arria10_hps_f2sdram0_data_awprot -> arria10_hps:f2sdram0_AWPROT
	wire    [63:0] mm_interconnect_4_arria10_hps_f2sdram0_data_wdata;       // mm_interconnect_4:arria10_hps_f2sdram0_data_wdata -> arria10_hps:f2sdram0_WDATA
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_arvalid;     // mm_interconnect_4:arria10_hps_f2sdram0_data_arvalid -> arria10_hps:f2sdram0_ARVALID
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awcache;     // mm_interconnect_4:arria10_hps_f2sdram0_data_awcache -> arria10_hps:f2sdram0_AWCACHE
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_arid;        // mm_interconnect_4:arria10_hps_f2sdram0_data_arid -> arria10_hps:f2sdram0_ARID
	wire     [1:0] mm_interconnect_4_arria10_hps_f2sdram0_data_arlock;      // mm_interconnect_4:arria10_hps_f2sdram0_data_arlock -> arria10_hps:f2sdram0_ARLOCK
	wire     [1:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awlock;      // mm_interconnect_4:arria10_hps_f2sdram0_data_awlock -> arria10_hps:f2sdram0_AWLOCK
	wire    [31:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awaddr;      // mm_interconnect_4:arria10_hps_f2sdram0_data_awaddr -> arria10_hps:f2sdram0_AWADDR
	wire     [1:0] mm_interconnect_4_arria10_hps_f2sdram0_data_bresp;       // arria10_hps:f2sdram0_BRESP -> mm_interconnect_4:arria10_hps_f2sdram0_data_bresp
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_arready;     // arria10_hps:f2sdram0_ARREADY -> mm_interconnect_4:arria10_hps_f2sdram0_data_arready
	wire    [63:0] mm_interconnect_4_arria10_hps_f2sdram0_data_rdata;       // arria10_hps:f2sdram0_RDATA -> mm_interconnect_4:arria10_hps_f2sdram0_data_rdata
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_awready;     // arria10_hps:f2sdram0_AWREADY -> mm_interconnect_4:arria10_hps_f2sdram0_data_awready
	wire     [1:0] mm_interconnect_4_arria10_hps_f2sdram0_data_arburst;     // mm_interconnect_4:arria10_hps_f2sdram0_data_arburst -> arria10_hps:f2sdram0_ARBURST
	wire     [2:0] mm_interconnect_4_arria10_hps_f2sdram0_data_arsize;      // mm_interconnect_4:arria10_hps_f2sdram0_data_arsize -> arria10_hps:f2sdram0_ARSIZE
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_bready;      // mm_interconnect_4:arria10_hps_f2sdram0_data_bready -> arria10_hps:f2sdram0_BREADY
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_rlast;       // arria10_hps:f2sdram0_RLAST -> mm_interconnect_4:arria10_hps_f2sdram0_data_rlast
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_wlast;       // mm_interconnect_4:arria10_hps_f2sdram0_data_wlast -> arria10_hps:f2sdram0_WLAST
	wire     [1:0] mm_interconnect_4_arria10_hps_f2sdram0_data_rresp;       // arria10_hps:f2sdram0_RRESP -> mm_interconnect_4:arria10_hps_f2sdram0_data_rresp
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awid;        // mm_interconnect_4:arria10_hps_f2sdram0_data_awid -> arria10_hps:f2sdram0_AWID
	wire     [3:0] mm_interconnect_4_arria10_hps_f2sdram0_data_bid;         // arria10_hps:f2sdram0_BID -> mm_interconnect_4:arria10_hps_f2sdram0_data_bid
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_bvalid;      // arria10_hps:f2sdram0_BVALID -> mm_interconnect_4:arria10_hps_f2sdram0_data_bvalid
	wire     [2:0] mm_interconnect_4_arria10_hps_f2sdram0_data_awsize;      // mm_interconnect_4:arria10_hps_f2sdram0_data_awsize -> arria10_hps:f2sdram0_AWSIZE
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_awvalid;     // mm_interconnect_4:arria10_hps_f2sdram0_data_awvalid -> arria10_hps:f2sdram0_AWVALID
	wire     [4:0] mm_interconnect_4_arria10_hps_f2sdram0_data_aruser;      // mm_interconnect_4:arria10_hps_f2sdram0_data_aruser -> arria10_hps:f2sdram0_ARUSER
	wire           mm_interconnect_4_arria10_hps_f2sdram0_data_rvalid;      // arria10_hps:f2sdram0_RVALID -> mm_interconnect_4:arria10_hps_f2sdram0_data_rvalid
	wire     [3:0] ilc_irq_irq;                                             // irq_mapper:sender_irq -> ILC:irq
	wire    [31:0] arria10_hps_f2h_irq0_irq;                                // irq_mapper_001:sender_irq -> arria10_hps:f2h_irq_p0
	wire    [31:0] arria10_hps_f2h_irq1_irq;                                // irq_mapper_002:sender_irq -> arria10_hps:f2h_irq_p1
	wire           irq_mapper_receiver2_irq;                                // button_pio:irq -> [irq_mapper:receiver2_irq, irq_mapper_001:receiver2_irq]
	wire           irq_mapper_receiver3_irq;                                // dipsw_pio:irq -> [irq_mapper:receiver3_irq, irq_mapper_001:receiver3_irq]
	wire           irq_mapper_receiver0_irq;                                // msgdma_0:csr_irq_irq -> [irq_mapper:receiver0_irq, irq_mapper_001:receiver0_irq]
	wire           irq_mapper_receiver1_irq;                                // msgdma_1:csr_irq_irq -> [irq_mapper:receiver1_irq, irq_mapper_001:receiver1_irq]
	wire           rst_controller_reset_out_reset_req;                      // rst_controller:reset_req -> [onchip_memory2:reset_req, rst_translator:reset_req_in]
	wire           arria10_hps_h2f_reset_reset;                             // arria10_hps:h2f_rst_n -> [rst_controller:reset_in1, rst_controller_003:reset_in1, rst_controller_004:reset_in1, rst_controller_005:reset_in1]
	wire           rst_controller_001_reset_out_reset;                      // rst_controller_001:reset_out -> [arria10_hps:f2s_sdram0_rst, arria10_hps:f2s_sdram1_rst, arria10_hps:h2f_axi_rst, dc_fifo_0:in_reset_n, dc_fifo_1:out_reset_n, mm_interconnect_0:arria10_hps_h2f_axi_reset_reset_bridge_in_reset_reset, mm_interconnect_3:msgdma_0_reset_n_reset_bridge_in_reset_reset, mm_interconnect_4:arria10_hps_f2sdram0_reset_reset_bridge_in_reset_reset, msgdma_0:reset_n_reset_n, msgdma_1:reset_n_reset_n]
	wire           rst_controller_002_reset_out_reset;                      // rst_controller_002:reset_out -> [dc_fifo_0:out_reset_n, dc_fifo_1:in_reset_n]
	wire           rst_controller_003_reset_out_reset;                      // rst_controller_003:reset_out -> f2sdram_m:clk_reset_reset
	wire           rst_controller_004_reset_out_reset;                      // rst_controller_004:reset_out -> fpga_m:clk_reset_reset
	wire           rst_controller_005_reset_out_reset;                      // rst_controller_005:reset_out -> hps_m:clk_reset_reset

	interrupt_latency_counter #(
		.INTR_TYPE    (0),
		.CLOCK_RATE   (100000000),
		.IRQ_PORT_CNT (4)
	) ilc (
		.reset_n     (~hps_fpga_reset_reset),                        //      reset_n.reset_n
		.clk         (clk_100_clk),                                  //          clk.clk
		.irq         (ilc_irq_irq),                                  //          irq.irq
		.avmm_addr   (mm_interconnect_2_ilc_avalon_slave_address),   // avalon_slave.address
		.avmm_wrdata (mm_interconnect_2_ilc_avalon_slave_writedata), //             .writedata
		.avmm_write  (mm_interconnect_2_ilc_avalon_slave_write),     //             .write
		.avmm_read   (mm_interconnect_2_ilc_avalon_slave_read),      //             .read
		.avmm_rddata (mm_interconnect_2_ilc_avalon_slave_readdata)   //             .readdata
	);

	a10s_ghrd_altera_arria10_hps_181_eeq4liq #(
		.F2S_Width (2),
		.S2F_Width (2)
	) arria10_hps (
		.h2f_rst_n                 (arria10_hps_h2f_reset_reset),                         //           h2f_reset.reset_n
		.f2h_cold_rst_req_n        (f2h_cold_reset_req_reset_n),                          //  f2h_cold_reset_req.reset_n
		.f2h_dbg_rst_req_n         (f2h_debug_reset_req_reset_n),                         // f2h_debug_reset_req.reset_n
		.f2h_warm_rst_req_n        (f2h_warm_reset_req_reset_n),                          //  f2h_warm_reset_req.reset_n
		.f2h_stm_hwevents          (f2h_stm_hw_events_stm_hwevents),                      //   f2h_stm_hw_events.stm_hwevents
		.emif_emif_to_hps          (emif_a10_hps_hps_emif_conduit_end_emif_to_hps),       //                emif.emif_to_hps
		.emif_hps_to_emif          (arria10_hps_emif_hps_to_emif),                        //                    .hps_to_emif
		.emif_emif_to_gp           (emif_a10_hps_hps_emif_conduit_end_emif_to_gp),        //                    .emif_to_gp
		.emif_gp_to_emif           (arria10_hps_emif_gp_to_emif),                         //                    .gp_to_emif
		.f2h_axi_clk               (clk_100_clk),                                         //       f2h_axi_clock.clk
		.f2h_axi_rst               (~hps_fpga_reset_reset),                               //       f2h_axi_reset.reset_n
		.f2h_AWID                  (mm_interconnect_3_arria10_hps_f2h_axi_slave_awid),    //       f2h_axi_slave.awid
		.f2h_AWADDR                (mm_interconnect_3_arria10_hps_f2h_axi_slave_awaddr),  //                    .awaddr
		.f2h_AWLEN                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_awlen),   //                    .awlen
		.f2h_AWSIZE                (mm_interconnect_3_arria10_hps_f2h_axi_slave_awsize),  //                    .awsize
		.f2h_AWBURST               (mm_interconnect_3_arria10_hps_f2h_axi_slave_awburst), //                    .awburst
		.f2h_AWLOCK                (mm_interconnect_3_arria10_hps_f2h_axi_slave_awlock),  //                    .awlock
		.f2h_AWCACHE               (mm_interconnect_3_arria10_hps_f2h_axi_slave_awcache), //                    .awcache
		.f2h_AWPROT                (mm_interconnect_3_arria10_hps_f2h_axi_slave_awprot),  //                    .awprot
		.f2h_AWVALID               (mm_interconnect_3_arria10_hps_f2h_axi_slave_awvalid), //                    .awvalid
		.f2h_AWREADY               (mm_interconnect_3_arria10_hps_f2h_axi_slave_awready), //                    .awready
		.f2h_AWUSER                (mm_interconnect_3_arria10_hps_f2h_axi_slave_awuser),  //                    .awuser
		.f2h_WID                   (mm_interconnect_3_arria10_hps_f2h_axi_slave_wid),     //                    .wid
		.f2h_WDATA                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_wdata),   //                    .wdata
		.f2h_WSTRB                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_wstrb),   //                    .wstrb
		.f2h_WLAST                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_wlast),   //                    .wlast
		.f2h_WVALID                (mm_interconnect_3_arria10_hps_f2h_axi_slave_wvalid),  //                    .wvalid
		.f2h_WREADY                (mm_interconnect_3_arria10_hps_f2h_axi_slave_wready),  //                    .wready
		.f2h_BID                   (mm_interconnect_3_arria10_hps_f2h_axi_slave_bid),     //                    .bid
		.f2h_BRESP                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_bresp),   //                    .bresp
		.f2h_BVALID                (mm_interconnect_3_arria10_hps_f2h_axi_slave_bvalid),  //                    .bvalid
		.f2h_BREADY                (mm_interconnect_3_arria10_hps_f2h_axi_slave_bready),  //                    .bready
		.f2h_ARID                  (mm_interconnect_3_arria10_hps_f2h_axi_slave_arid),    //                    .arid
		.f2h_ARADDR                (mm_interconnect_3_arria10_hps_f2h_axi_slave_araddr),  //                    .araddr
		.f2h_ARLEN                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_arlen),   //                    .arlen
		.f2h_ARSIZE                (mm_interconnect_3_arria10_hps_f2h_axi_slave_arsize),  //                    .arsize
		.f2h_ARBURST               (mm_interconnect_3_arria10_hps_f2h_axi_slave_arburst), //                    .arburst
		.f2h_ARLOCK                (mm_interconnect_3_arria10_hps_f2h_axi_slave_arlock),  //                    .arlock
		.f2h_ARCACHE               (mm_interconnect_3_arria10_hps_f2h_axi_slave_arcache), //                    .arcache
		.f2h_ARPROT                (mm_interconnect_3_arria10_hps_f2h_axi_slave_arprot),  //                    .arprot
		.f2h_ARVALID               (mm_interconnect_3_arria10_hps_f2h_axi_slave_arvalid), //                    .arvalid
		.f2h_ARREADY               (mm_interconnect_3_arria10_hps_f2h_axi_slave_arready), //                    .arready
		.f2h_ARUSER                (mm_interconnect_3_arria10_hps_f2h_axi_slave_aruser),  //                    .aruser
		.f2h_RID                   (mm_interconnect_3_arria10_hps_f2h_axi_slave_rid),     //                    .rid
		.f2h_RDATA                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_rdata),   //                    .rdata
		.f2h_RRESP                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_rresp),   //                    .rresp
		.f2h_RLAST                 (mm_interconnect_3_arria10_hps_f2h_axi_slave_rlast),   //                    .rlast
		.f2h_RVALID                (mm_interconnect_3_arria10_hps_f2h_axi_slave_rvalid),  //                    .rvalid
		.f2h_RREADY                (mm_interconnect_3_arria10_hps_f2h_axi_slave_rready),  //                    .rready
		.h2f_lw_axi_clk            (clk_100_clk),                                         //    h2f_lw_axi_clock.clk
		.h2f_lw_axi_rst            (~hps_fpga_reset_reset),                               //    h2f_lw_axi_reset.reset_n
		.h2f_lw_AWID               (arria10_hps_h2f_lw_axi_master_awid),                  //   h2f_lw_axi_master.awid
		.h2f_lw_AWADDR             (arria10_hps_h2f_lw_axi_master_awaddr),                //                    .awaddr
		.h2f_lw_AWLEN              (arria10_hps_h2f_lw_axi_master_awlen),                 //                    .awlen
		.h2f_lw_AWSIZE             (arria10_hps_h2f_lw_axi_master_awsize),                //                    .awsize
		.h2f_lw_AWBURST            (arria10_hps_h2f_lw_axi_master_awburst),               //                    .awburst
		.h2f_lw_AWLOCK             (arria10_hps_h2f_lw_axi_master_awlock),                //                    .awlock
		.h2f_lw_AWCACHE            (arria10_hps_h2f_lw_axi_master_awcache),               //                    .awcache
		.h2f_lw_AWPROT             (arria10_hps_h2f_lw_axi_master_awprot),                //                    .awprot
		.h2f_lw_AWVALID            (arria10_hps_h2f_lw_axi_master_awvalid),               //                    .awvalid
		.h2f_lw_AWREADY            (arria10_hps_h2f_lw_axi_master_awready),               //                    .awready
		.h2f_lw_AWUSER             (arria10_hps_h2f_lw_axi_master_awuser),                //                    .awuser
		.h2f_lw_WID                (arria10_hps_h2f_lw_axi_master_wid),                   //                    .wid
		.h2f_lw_WDATA              (arria10_hps_h2f_lw_axi_master_wdata),                 //                    .wdata
		.h2f_lw_WSTRB              (arria10_hps_h2f_lw_axi_master_wstrb),                 //                    .wstrb
		.h2f_lw_WLAST              (arria10_hps_h2f_lw_axi_master_wlast),                 //                    .wlast
		.h2f_lw_WVALID             (arria10_hps_h2f_lw_axi_master_wvalid),                //                    .wvalid
		.h2f_lw_WREADY             (arria10_hps_h2f_lw_axi_master_wready),                //                    .wready
		.h2f_lw_BID                (arria10_hps_h2f_lw_axi_master_bid),                   //                    .bid
		.h2f_lw_BRESP              (arria10_hps_h2f_lw_axi_master_bresp),                 //                    .bresp
		.h2f_lw_BVALID             (arria10_hps_h2f_lw_axi_master_bvalid),                //                    .bvalid
		.h2f_lw_BREADY             (arria10_hps_h2f_lw_axi_master_bready),                //                    .bready
		.h2f_lw_ARID               (arria10_hps_h2f_lw_axi_master_arid),                  //                    .arid
		.h2f_lw_ARADDR             (arria10_hps_h2f_lw_axi_master_araddr),                //                    .araddr
		.h2f_lw_ARLEN              (arria10_hps_h2f_lw_axi_master_arlen),                 //                    .arlen
		.h2f_lw_ARSIZE             (arria10_hps_h2f_lw_axi_master_arsize),                //                    .arsize
		.h2f_lw_ARBURST            (arria10_hps_h2f_lw_axi_master_arburst),               //                    .arburst
		.h2f_lw_ARLOCK             (arria10_hps_h2f_lw_axi_master_arlock),                //                    .arlock
		.h2f_lw_ARCACHE            (arria10_hps_h2f_lw_axi_master_arcache),               //                    .arcache
		.h2f_lw_ARPROT             (arria10_hps_h2f_lw_axi_master_arprot),                //                    .arprot
		.h2f_lw_ARVALID            (arria10_hps_h2f_lw_axi_master_arvalid),               //                    .arvalid
		.h2f_lw_ARREADY            (arria10_hps_h2f_lw_axi_master_arready),               //                    .arready
		.h2f_lw_ARUSER             (arria10_hps_h2f_lw_axi_master_aruser),                //                    .aruser
		.h2f_lw_RID                (arria10_hps_h2f_lw_axi_master_rid),                   //                    .rid
		.h2f_lw_RDATA              (arria10_hps_h2f_lw_axi_master_rdata),                 //                    .rdata
		.h2f_lw_RRESP              (arria10_hps_h2f_lw_axi_master_rresp),                 //                    .rresp
		.h2f_lw_RLAST              (arria10_hps_h2f_lw_axi_master_rlast),                 //                    .rlast
		.h2f_lw_RVALID             (arria10_hps_h2f_lw_axi_master_rvalid),                //                    .rvalid
		.h2f_lw_RREADY             (arria10_hps_h2f_lw_axi_master_rready),                //                    .rready
		.h2f_axi_clk               (clk_100_clk),                                         //       h2f_axi_clock.clk
		.h2f_axi_rst               (~rst_controller_001_reset_out_reset),                 //       h2f_axi_reset.reset_n
		.h2f_AWID                  (arria10_hps_h2f_axi_master_awid),                     //      h2f_axi_master.awid
		.h2f_AWADDR                (arria10_hps_h2f_axi_master_awaddr),                   //                    .awaddr
		.h2f_AWLEN                 (arria10_hps_h2f_axi_master_awlen),                    //                    .awlen
		.h2f_AWSIZE                (arria10_hps_h2f_axi_master_awsize),                   //                    .awsize
		.h2f_AWBURST               (arria10_hps_h2f_axi_master_awburst),                  //                    .awburst
		.h2f_AWLOCK                (arria10_hps_h2f_axi_master_awlock),                   //                    .awlock
		.h2f_AWCACHE               (arria10_hps_h2f_axi_master_awcache),                  //                    .awcache
		.h2f_AWPROT                (arria10_hps_h2f_axi_master_awprot),                   //                    .awprot
		.h2f_AWVALID               (arria10_hps_h2f_axi_master_awvalid),                  //                    .awvalid
		.h2f_AWREADY               (arria10_hps_h2f_axi_master_awready),                  //                    .awready
		.h2f_AWUSER                (arria10_hps_h2f_axi_master_awuser),                   //                    .awuser
		.h2f_WID                   (arria10_hps_h2f_axi_master_wid),                      //                    .wid
		.h2f_WDATA                 (arria10_hps_h2f_axi_master_wdata),                    //                    .wdata
		.h2f_WSTRB                 (arria10_hps_h2f_axi_master_wstrb),                    //                    .wstrb
		.h2f_WLAST                 (arria10_hps_h2f_axi_master_wlast),                    //                    .wlast
		.h2f_WVALID                (arria10_hps_h2f_axi_master_wvalid),                   //                    .wvalid
		.h2f_WREADY                (arria10_hps_h2f_axi_master_wready),                   //                    .wready
		.h2f_BID                   (arria10_hps_h2f_axi_master_bid),                      //                    .bid
		.h2f_BRESP                 (arria10_hps_h2f_axi_master_bresp),                    //                    .bresp
		.h2f_BVALID                (arria10_hps_h2f_axi_master_bvalid),                   //                    .bvalid
		.h2f_BREADY                (arria10_hps_h2f_axi_master_bready),                   //                    .bready
		.h2f_ARID                  (arria10_hps_h2f_axi_master_arid),                     //                    .arid
		.h2f_ARADDR                (arria10_hps_h2f_axi_master_araddr),                   //                    .araddr
		.h2f_ARLEN                 (arria10_hps_h2f_axi_master_arlen),                    //                    .arlen
		.h2f_ARSIZE                (arria10_hps_h2f_axi_master_arsize),                   //                    .arsize
		.h2f_ARBURST               (arria10_hps_h2f_axi_master_arburst),                  //                    .arburst
		.h2f_ARLOCK                (arria10_hps_h2f_axi_master_arlock),                   //                    .arlock
		.h2f_ARCACHE               (arria10_hps_h2f_axi_master_arcache),                  //                    .arcache
		.h2f_ARPROT                (arria10_hps_h2f_axi_master_arprot),                   //                    .arprot
		.h2f_ARVALID               (arria10_hps_h2f_axi_master_arvalid),                  //                    .arvalid
		.h2f_ARREADY               (arria10_hps_h2f_axi_master_arready),                  //                    .arready
		.h2f_ARUSER                (arria10_hps_h2f_axi_master_aruser),                   //                    .aruser
		.h2f_RID                   (arria10_hps_h2f_axi_master_rid),                      //                    .rid
		.h2f_RDATA                 (arria10_hps_h2f_axi_master_rdata),                    //                    .rdata
		.h2f_RRESP                 (arria10_hps_h2f_axi_master_rresp),                    //                    .rresp
		.h2f_RLAST                 (arria10_hps_h2f_axi_master_rlast),                    //                    .rlast
		.h2f_RVALID                (arria10_hps_h2f_axi_master_rvalid),                   //                    .rvalid
		.h2f_RREADY                (arria10_hps_h2f_axi_master_rready),                   //                    .rready
		.f2sdram0_clk              (clk_100_clk),                                         //      f2sdram0_clock.clk
		.f2s_sdram0_rst            (~rst_controller_001_reset_out_reset),                 //      f2sdram0_reset.reset_n
		.f2sdram0_ARADDR           (mm_interconnect_4_arria10_hps_f2sdram0_data_araddr),  //       f2sdram0_data.araddr
		.f2sdram0_ARBURST          (mm_interconnect_4_arria10_hps_f2sdram0_data_arburst), //                    .arburst
		.f2sdram0_ARCACHE          (mm_interconnect_4_arria10_hps_f2sdram0_data_arcache), //                    .arcache
		.f2sdram0_ARID             (mm_interconnect_4_arria10_hps_f2sdram0_data_arid),    //                    .arid
		.f2sdram0_ARLEN            (mm_interconnect_4_arria10_hps_f2sdram0_data_arlen),   //                    .arlen
		.f2sdram0_ARLOCK           (mm_interconnect_4_arria10_hps_f2sdram0_data_arlock),  //                    .arlock
		.f2sdram0_ARPROT           (mm_interconnect_4_arria10_hps_f2sdram0_data_arprot),  //                    .arprot
		.f2sdram0_ARREADY          (mm_interconnect_4_arria10_hps_f2sdram0_data_arready), //                    .arready
		.f2sdram0_ARSIZE           (mm_interconnect_4_arria10_hps_f2sdram0_data_arsize),  //                    .arsize
		.f2sdram0_ARUSER           (mm_interconnect_4_arria10_hps_f2sdram0_data_aruser),  //                    .aruser
		.f2sdram0_ARVALID          (mm_interconnect_4_arria10_hps_f2sdram0_data_arvalid), //                    .arvalid
		.f2sdram0_AWADDR           (mm_interconnect_4_arria10_hps_f2sdram0_data_awaddr),  //                    .awaddr
		.f2sdram0_AWBURST          (mm_interconnect_4_arria10_hps_f2sdram0_data_awburst), //                    .awburst
		.f2sdram0_AWCACHE          (mm_interconnect_4_arria10_hps_f2sdram0_data_awcache), //                    .awcache
		.f2sdram0_AWID             (mm_interconnect_4_arria10_hps_f2sdram0_data_awid),    //                    .awid
		.f2sdram0_AWLEN            (mm_interconnect_4_arria10_hps_f2sdram0_data_awlen),   //                    .awlen
		.f2sdram0_AWLOCK           (mm_interconnect_4_arria10_hps_f2sdram0_data_awlock),  //                    .awlock
		.f2sdram0_AWPROT           (mm_interconnect_4_arria10_hps_f2sdram0_data_awprot),  //                    .awprot
		.f2sdram0_AWREADY          (mm_interconnect_4_arria10_hps_f2sdram0_data_awready), //                    .awready
		.f2sdram0_AWSIZE           (mm_interconnect_4_arria10_hps_f2sdram0_data_awsize),  //                    .awsize
		.f2sdram0_AWUSER           (mm_interconnect_4_arria10_hps_f2sdram0_data_awuser),  //                    .awuser
		.f2sdram0_AWVALID          (mm_interconnect_4_arria10_hps_f2sdram0_data_awvalid), //                    .awvalid
		.f2sdram0_WDATA            (mm_interconnect_4_arria10_hps_f2sdram0_data_wdata),   //                    .wdata
		.f2sdram0_WID              (mm_interconnect_4_arria10_hps_f2sdram0_data_wid),     //                    .wid
		.f2sdram0_WLAST            (mm_interconnect_4_arria10_hps_f2sdram0_data_wlast),   //                    .wlast
		.f2sdram0_WREADY           (mm_interconnect_4_arria10_hps_f2sdram0_data_wready),  //                    .wready
		.f2sdram0_WSTRB            (mm_interconnect_4_arria10_hps_f2sdram0_data_wstrb),   //                    .wstrb
		.f2sdram0_WVALID           (mm_interconnect_4_arria10_hps_f2sdram0_data_wvalid),  //                    .wvalid
		.f2sdram0_BID              (mm_interconnect_4_arria10_hps_f2sdram0_data_bid),     //                    .bid
		.f2sdram0_BREADY           (mm_interconnect_4_arria10_hps_f2sdram0_data_bready),  //                    .bready
		.f2sdram0_BRESP            (mm_interconnect_4_arria10_hps_f2sdram0_data_bresp),   //                    .bresp
		.f2sdram0_BVALID           (mm_interconnect_4_arria10_hps_f2sdram0_data_bvalid),  //                    .bvalid
		.f2sdram0_RDATA            (mm_interconnect_4_arria10_hps_f2sdram0_data_rdata),   //                    .rdata
		.f2sdram0_RID              (mm_interconnect_4_arria10_hps_f2sdram0_data_rid),     //                    .rid
		.f2sdram0_RLAST            (mm_interconnect_4_arria10_hps_f2sdram0_data_rlast),   //                    .rlast
		.f2sdram0_RREADY           (mm_interconnect_4_arria10_hps_f2sdram0_data_rready),  //                    .rready
		.f2sdram0_RRESP            (mm_interconnect_4_arria10_hps_f2sdram0_data_rresp),   //                    .rresp
		.f2sdram0_RVALID           (mm_interconnect_4_arria10_hps_f2sdram0_data_rvalid),  //                    .rvalid
		.f2sdram1_clk              (clk_100_clk),                                         //      f2sdram1_clock.clk
		.f2s_sdram1_rst            (~rst_controller_001_reset_out_reset),                 //      f2sdram1_reset.reset_n
		.f2sdram1_ARADDR           (),                                                    //       f2sdram1_data.araddr
		.f2sdram1_ARBURST          (),                                                    //                    .arburst
		.f2sdram1_ARCACHE          (),                                                    //                    .arcache
		.f2sdram1_ARID             (),                                                    //                    .arid
		.f2sdram1_ARLEN            (),                                                    //                    .arlen
		.f2sdram1_ARLOCK           (),                                                    //                    .arlock
		.f2sdram1_ARPROT           (),                                                    //                    .arprot
		.f2sdram1_ARREADY          (),                                                    //                    .arready
		.f2sdram1_ARSIZE           (),                                                    //                    .arsize
		.f2sdram1_ARUSER           (),                                                    //                    .aruser
		.f2sdram1_ARVALID          (),                                                    //                    .arvalid
		.f2sdram1_AWADDR           (),                                                    //                    .awaddr
		.f2sdram1_AWBURST          (),                                                    //                    .awburst
		.f2sdram1_AWCACHE          (),                                                    //                    .awcache
		.f2sdram1_AWID             (),                                                    //                    .awid
		.f2sdram1_AWLEN            (),                                                    //                    .awlen
		.f2sdram1_AWLOCK           (),                                                    //                    .awlock
		.f2sdram1_AWPROT           (),                                                    //                    .awprot
		.f2sdram1_AWREADY          (),                                                    //                    .awready
		.f2sdram1_AWSIZE           (),                                                    //                    .awsize
		.f2sdram1_AWUSER           (),                                                    //                    .awuser
		.f2sdram1_AWVALID          (),                                                    //                    .awvalid
		.f2sdram1_WDATA            (),                                                    //                    .wdata
		.f2sdram1_WID              (),                                                    //                    .wid
		.f2sdram1_WLAST            (),                                                    //                    .wlast
		.f2sdram1_WREADY           (),                                                    //                    .wready
		.f2sdram1_WSTRB            (),                                                    //                    .wstrb
		.f2sdram1_WVALID           (),                                                    //                    .wvalid
		.f2sdram1_BID              (),                                                    //                    .bid
		.f2sdram1_BREADY           (),                                                    //                    .bready
		.f2sdram1_BRESP            (),                                                    //                    .bresp
		.f2sdram1_BVALID           (),                                                    //                    .bvalid
		.f2sdram1_RDATA            (),                                                    //                    .rdata
		.f2sdram1_RID              (),                                                    //                    .rid
		.f2sdram1_RLAST            (),                                                    //                    .rlast
		.f2sdram1_RREADY           (),                                                    //                    .rready
		.f2sdram1_RRESP            (),                                                    //                    .rresp
		.f2sdram1_RVALID           (),                                                    //                    .rvalid
		.f2h_irq_p0                (arria10_hps_f2h_irq0_irq),                            //            f2h_irq0.irq
		.f2h_irq_p1                (arria10_hps_f2h_irq1_irq),                            //            f2h_irq1.irq
		.hps_io_phery_emac0_TX_CLK (hps_io_hps_io_phery_emac0_TX_CLK),                    //              hps_io.hps_io_phery_emac0_TX_CLK
		.hps_io_phery_emac0_TXD0   (hps_io_hps_io_phery_emac0_TXD0),                      //                    .hps_io_phery_emac0_TXD0
		.hps_io_phery_emac0_TXD1   (hps_io_hps_io_phery_emac0_TXD1),                      //                    .hps_io_phery_emac0_TXD1
		.hps_io_phery_emac0_TXD2   (hps_io_hps_io_phery_emac0_TXD2),                      //                    .hps_io_phery_emac0_TXD2
		.hps_io_phery_emac0_TXD3   (hps_io_hps_io_phery_emac0_TXD3),                      //                    .hps_io_phery_emac0_TXD3
		.hps_io_phery_emac0_RX_CTL (hps_io_hps_io_phery_emac0_RX_CTL),                    //                    .hps_io_phery_emac0_RX_CTL
		.hps_io_phery_emac0_TX_CTL (hps_io_hps_io_phery_emac0_TX_CTL),                    //                    .hps_io_phery_emac0_TX_CTL
		.hps_io_phery_emac0_RX_CLK (hps_io_hps_io_phery_emac0_RX_CLK),                    //                    .hps_io_phery_emac0_RX_CLK
		.hps_io_phery_emac0_RXD0   (hps_io_hps_io_phery_emac0_RXD0),                      //                    .hps_io_phery_emac0_RXD0
		.hps_io_phery_emac0_RXD1   (hps_io_hps_io_phery_emac0_RXD1),                      //                    .hps_io_phery_emac0_RXD1
		.hps_io_phery_emac0_RXD2   (hps_io_hps_io_phery_emac0_RXD2),                      //                    .hps_io_phery_emac0_RXD2
		.hps_io_phery_emac0_RXD3   (hps_io_hps_io_phery_emac0_RXD3),                      //                    .hps_io_phery_emac0_RXD3
		.hps_io_phery_emac0_MDIO   (hps_io_hps_io_phery_emac0_MDIO),                      //                    .hps_io_phery_emac0_MDIO
		.hps_io_phery_emac0_MDC    (hps_io_hps_io_phery_emac0_MDC),                       //                    .hps_io_phery_emac0_MDC
		.hps_io_phery_sdmmc_CMD    (hps_io_hps_io_phery_sdmmc_CMD),                       //                    .hps_io_phery_sdmmc_CMD
		.hps_io_phery_sdmmc_D0     (hps_io_hps_io_phery_sdmmc_D0),                        //                    .hps_io_phery_sdmmc_D0
		.hps_io_phery_sdmmc_D1     (hps_io_hps_io_phery_sdmmc_D1),                        //                    .hps_io_phery_sdmmc_D1
		.hps_io_phery_sdmmc_D2     (hps_io_hps_io_phery_sdmmc_D2),                        //                    .hps_io_phery_sdmmc_D2
		.hps_io_phery_sdmmc_D3     (hps_io_hps_io_phery_sdmmc_D3),                        //                    .hps_io_phery_sdmmc_D3
		.hps_io_phery_sdmmc_CCLK   (hps_io_hps_io_phery_sdmmc_CCLK),                      //                    .hps_io_phery_sdmmc_CCLK
		.hps_io_phery_usb0_DATA0   (hps_io_hps_io_phery_usb0_DATA0),                      //                    .hps_io_phery_usb0_DATA0
		.hps_io_phery_usb0_DATA1   (hps_io_hps_io_phery_usb0_DATA1),                      //                    .hps_io_phery_usb0_DATA1
		.hps_io_phery_usb0_DATA2   (hps_io_hps_io_phery_usb0_DATA2),                      //                    .hps_io_phery_usb0_DATA2
		.hps_io_phery_usb0_DATA3   (hps_io_hps_io_phery_usb0_DATA3),                      //                    .hps_io_phery_usb0_DATA3
		.hps_io_phery_usb0_DATA4   (hps_io_hps_io_phery_usb0_DATA4),                      //                    .hps_io_phery_usb0_DATA4
		.hps_io_phery_usb0_DATA5   (hps_io_hps_io_phery_usb0_DATA5),                      //                    .hps_io_phery_usb0_DATA5
		.hps_io_phery_usb0_DATA6   (hps_io_hps_io_phery_usb0_DATA6),                      //                    .hps_io_phery_usb0_DATA6
		.hps_io_phery_usb0_DATA7   (hps_io_hps_io_phery_usb0_DATA7),                      //                    .hps_io_phery_usb0_DATA7
		.hps_io_phery_usb0_CLK     (hps_io_hps_io_phery_usb0_CLK),                        //                    .hps_io_phery_usb0_CLK
		.hps_io_phery_usb0_STP     (hps_io_hps_io_phery_usb0_STP),                        //                    .hps_io_phery_usb0_STP
		.hps_io_phery_usb0_DIR     (hps_io_hps_io_phery_usb0_DIR),                        //                    .hps_io_phery_usb0_DIR
		.hps_io_phery_usb0_NXT     (hps_io_hps_io_phery_usb0_NXT),                        //                    .hps_io_phery_usb0_NXT
		.hps_io_phery_uart1_RX     (hps_io_hps_io_phery_uart1_RX),                        //                    .hps_io_phery_uart1_RX
		.hps_io_phery_uart1_TX     (hps_io_hps_io_phery_uart1_TX),                        //                    .hps_io_phery_uart1_TX
		.hps_io_phery_i2c0_SDA     (hps_io_hps_io_phery_i2c0_SDA),                        //                    .hps_io_phery_i2c0_SDA
		.hps_io_phery_i2c0_SCL     (hps_io_hps_io_phery_i2c0_SCL),                        //                    .hps_io_phery_i2c0_SCL
		.hps_io_gpio_gpio2_io8     (hps_io_hps_io_gpio_gpio2_io8),                        //                    .hps_io_gpio_gpio2_io8
		.hps_io_gpio_gpio2_io9     (hps_io_hps_io_gpio_gpio2_io9),                        //                    .hps_io_gpio_gpio2_io9
		.hps_io_gpio_gpio2_io10    (hps_io_hps_io_gpio_gpio2_io10),                       //                    .hps_io_gpio_gpio2_io10
		.hps_io_gpio_gpio2_io11    (hps_io_hps_io_gpio_gpio2_io11),                       //                    .hps_io_gpio_gpio2_io11
		.hps_io_gpio_gpio1_io1     (hps_io_hps_io_gpio_gpio1_io1),                        //                    .hps_io_gpio_gpio1_io1
		.hps_io_gpio_gpio1_io4     (hps_io_hps_io_gpio_gpio1_io4)                         //                    .hps_io_gpio_gpio1_io4
	);

	a10s_ghrd_altera_avalon_pio_181_u6z2bzq button_pio (
		.clk        (clk_100_clk),                                //                 clk.clk
		.reset_n    (~hps_fpga_reset_reset),                      //               reset.reset_n
		.address    (mm_interconnect_2_button_pio_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_2_button_pio_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_2_button_pio_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_2_button_pio_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_2_button_pio_s1_readdata),   //                    .readdata
		.in_port    (button_pio_external_connection_export),      // external_connection.export
		.irq        (irq_mapper_receiver2_irq)                    //                 irq.irq
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (4),
		.BITS_PER_SYMBOL    (8),
		.FIFO_DEPTH         (8192),
		.CHANNEL_WIDTH      (0),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (0),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) dc_fifo_0 (
		.in_clk            (clk_100_clk),                          //        in_clk.clk
		.in_reset_n        (~rst_controller_001_reset_out_reset),  //  in_clk_reset.reset_n
		.out_clk           (clock_bridge_0_in_clk_clk),            //       out_clk.clk
		.out_reset_n       (~rst_controller_002_reset_out_reset),  // out_clk_reset.reset_n
		.in_data           (msgdma_0_st_source_data),              //            in.data
		.in_valid          (msgdma_0_st_source_valid),             //              .valid
		.in_ready          (msgdma_0_st_source_ready),             //              .ready
		.out_data          (dc_fifo_0_out_data),                   //           out.data
		.out_valid         (dc_fifo_0_out_valid),                  //              .valid
		.out_ready         (dc_fifo_0_out_ready),                  //              .ready
		.in_csr_address    (1'b0),                                 //   (terminated)
		.in_csr_read       (1'b0),                                 //   (terminated)
		.in_csr_write      (1'b0),                                 //   (terminated)
		.in_csr_readdata   (),                                     //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000), //   (terminated)
		.out_csr_address   (1'b0),                                 //   (terminated)
		.out_csr_read      (1'b0),                                 //   (terminated)
		.out_csr_write     (1'b0),                                 //   (terminated)
		.out_csr_readdata  (),                                     //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000), //   (terminated)
		.in_startofpacket  (1'b0),                                 //   (terminated)
		.in_endofpacket    (1'b0),                                 //   (terminated)
		.out_startofpacket (),                                     //   (terminated)
		.out_endofpacket   (),                                     //   (terminated)
		.in_empty          (2'b00),                                //   (terminated)
		.out_empty         (),                                     //   (terminated)
		.in_error          (1'b0),                                 //   (terminated)
		.out_error         (),                                     //   (terminated)
		.in_channel        (1'b0),                                 //   (terminated)
		.out_channel       (),                                     //   (terminated)
		.space_avail_data  ()                                      //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (4),
		.BITS_PER_SYMBOL    (8),
		.FIFO_DEPTH         (8192),
		.CHANNEL_WIDTH      (0),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (0),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) dc_fifo_1 (
		.in_clk            (clock_bridge_0_in_clk_clk),            //        in_clk.clk
		.in_reset_n        (~rst_controller_002_reset_out_reset),  //  in_clk_reset.reset_n
		.out_clk           (clk_100_clk),                          //       out_clk.clk
		.out_reset_n       (~rst_controller_001_reset_out_reset),  // out_clk_reset.reset_n
		.in_data           (dc_fifo_1_in_data),                    //            in.data
		.in_valid          (dc_fifo_1_in_valid),                   //              .valid
		.in_ready          (dc_fifo_1_in_ready),                   //              .ready
		.out_data          (dc_fifo_1_out_data),                   //           out.data
		.out_valid         (dc_fifo_1_out_valid),                  //              .valid
		.out_ready         (dc_fifo_1_out_ready),                  //              .ready
		.in_csr_address    (1'b0),                                 //   (terminated)
		.in_csr_read       (1'b0),                                 //   (terminated)
		.in_csr_write      (1'b0),                                 //   (terminated)
		.in_csr_readdata   (),                                     //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000), //   (terminated)
		.out_csr_address   (1'b0),                                 //   (terminated)
		.out_csr_read      (1'b0),                                 //   (terminated)
		.out_csr_write     (1'b0),                                 //   (terminated)
		.out_csr_readdata  (),                                     //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000), //   (terminated)
		.in_startofpacket  (1'b0),                                 //   (terminated)
		.in_endofpacket    (1'b0),                                 //   (terminated)
		.out_startofpacket (),                                     //   (terminated)
		.out_endofpacket   (),                                     //   (terminated)
		.in_empty          (2'b00),                                //   (terminated)
		.out_empty         (),                                     //   (terminated)
		.in_error          (1'b0),                                 //   (terminated)
		.out_error         (),                                     //   (terminated)
		.in_channel        (1'b0),                                 //   (terminated)
		.out_channel       (),                                     //   (terminated)
		.space_avail_data  ()                                      //   (terminated)
	);

	a10s_ghrd_altera_avalon_pio_181_na6njny dipsw_pio (
		.clk        (clk_100_clk),                               //                 clk.clk
		.reset_n    (~hps_fpga_reset_reset),                     //               reset.reset_n
		.address    (mm_interconnect_2_dipsw_pio_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_2_dipsw_pio_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_2_dipsw_pio_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_2_dipsw_pio_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_2_dipsw_pio_s1_readdata),   //                    .readdata
		.in_port    (dipsw_pio_external_connection_export),      // external_connection.export
		.irq        (irq_mapper_receiver3_irq)                   //                 irq.irq
	);

	a10s_ghrd_altera_emif_a10_hps_181_oeawlci emif_a10_hps (
		.global_reset_n (reset_reset_n),                                 // global_reset_reset_sink.reset_n
		.pll_ref_clk    (emif_a10_hps_pll_ref_clk_clock_sink_clk),       //  pll_ref_clk_clock_sink.clk
		.oct_rzqin      (emif_a10_hps_oct_conduit_end_oct_rzqin),        //         oct_conduit_end.oct_rzqin
		.mem_ck         (emif_a10_hps_mem_conduit_end_mem_ck),           //         mem_conduit_end.mem_ck
		.mem_ck_n       (emif_a10_hps_mem_conduit_end_mem_ck_n),         //                        .mem_ck_n
		.mem_a          (emif_a10_hps_mem_conduit_end_mem_a),            //                        .mem_a
		.mem_act_n      (emif_a10_hps_mem_conduit_end_mem_act_n),        //                        .mem_act_n
		.mem_ba         (emif_a10_hps_mem_conduit_end_mem_ba),           //                        .mem_ba
		.mem_bg         (emif_a10_hps_mem_conduit_end_mem_bg),           //                        .mem_bg
		.mem_cke        (emif_a10_hps_mem_conduit_end_mem_cke),          //                        .mem_cke
		.mem_cs_n       (emif_a10_hps_mem_conduit_end_mem_cs_n),         //                        .mem_cs_n
		.mem_odt        (emif_a10_hps_mem_conduit_end_mem_odt),          //                        .mem_odt
		.mem_reset_n    (emif_a10_hps_mem_conduit_end_mem_reset_n),      //                        .mem_reset_n
		.mem_par        (emif_a10_hps_mem_conduit_end_mem_par),          //                        .mem_par
		.mem_alert_n    (emif_a10_hps_mem_conduit_end_mem_alert_n),      //                        .mem_alert_n
		.mem_dqs        (emif_a10_hps_mem_conduit_end_mem_dqs),          //                        .mem_dqs
		.mem_dqs_n      (emif_a10_hps_mem_conduit_end_mem_dqs_n),        //                        .mem_dqs_n
		.mem_dq         (emif_a10_hps_mem_conduit_end_mem_dq),           //                        .mem_dq
		.mem_dbi_n      (emif_a10_hps_mem_conduit_end_mem_dbi_n),        //                        .mem_dbi_n
		.hps_to_emif    (arria10_hps_emif_hps_to_emif),                  //    hps_emif_conduit_end.hps_to_emif
		.emif_to_hps    (emif_a10_hps_hps_emif_conduit_end_emif_to_hps), //                        .emif_to_hps
		.hps_to_emif_gp (arria10_hps_emif_gp_to_emif),                   //                        .gp_to_emif
		.emif_to_hps_gp (emif_a10_hps_hps_emif_conduit_end_emif_to_gp)   //                        .emif_to_gp
	);

	a10s_ghrd_altera_jtag_avalon_master_181_winiqja #(
		.USE_PLI     (0),
		.PLI_PORT    (50000),
		.FIFO_DEPTHS (2)
	) f2sdram_m (
		.clk_clk              (clk_100_clk),                        //          clk.clk
		.clk_reset_reset      (rst_controller_003_reset_out_reset), //    clk_reset.reset
		.master_address       (f2sdram_m_master_address),           //       master.address
		.master_readdata      (f2sdram_m_master_readdata),          //             .readdata
		.master_read          (f2sdram_m_master_read),              //             .read
		.master_write         (f2sdram_m_master_write),             //             .write
		.master_writedata     (f2sdram_m_master_writedata),         //             .writedata
		.master_waitrequest   (f2sdram_m_master_waitrequest),       //             .waitrequest
		.master_readdatavalid (f2sdram_m_master_readdatavalid),     //             .readdatavalid
		.master_byteenable    (f2sdram_m_master_byteenable),        //             .byteenable
		.master_reset_reset   ()                                    // master_reset.reset
	);

	a10s_ghrd_altera_jtag_avalon_master_181_winiqja #(
		.USE_PLI     (0),
		.PLI_PORT    (50000),
		.FIFO_DEPTHS (2)
	) fpga_m (
		.clk_clk              (clk_100_clk),                        //          clk.clk
		.clk_reset_reset      (rst_controller_004_reset_out_reset), //    clk_reset.reset
		.master_address       (fpga_m_master_address),              //       master.address
		.master_readdata      (fpga_m_master_readdata),             //             .readdata
		.master_read          (fpga_m_master_read),                 //             .read
		.master_write         (fpga_m_master_write),                //             .write
		.master_writedata     (fpga_m_master_writedata),            //             .writedata
		.master_waitrequest   (fpga_m_master_waitrequest),          //             .waitrequest
		.master_readdatavalid (fpga_m_master_readdatavalid),        //             .readdatavalid
		.master_byteenable    (fpga_m_master_byteenable),           //             .byteenable
		.master_reset_reset   ()                                    // master_reset.reset
	);

	a10s_ghrd_altera_jtag_avalon_master_181_winiqja #(
		.USE_PLI     (0),
		.PLI_PORT    (50000),
		.FIFO_DEPTHS (2)
	) hps_m (
		.clk_clk              (clk_100_clk),                        //          clk.clk
		.clk_reset_reset      (rst_controller_005_reset_out_reset), //    clk_reset.reset
		.master_address       (hps_m_master_address),               //       master.address
		.master_readdata      (hps_m_master_readdata),              //             .readdata
		.master_read          (hps_m_master_read),                  //             .read
		.master_write         (hps_m_master_write),                 //             .write
		.master_writedata     (hps_m_master_writedata),             //             .writedata
		.master_waitrequest   (hps_m_master_waitrequest),           //             .waitrequest
		.master_readdatavalid (hps_m_master_readdatavalid),         //             .readdatavalid
		.master_byteenable    (hps_m_master_byteenable),            //             .byteenable
		.master_reset_reset   ()                                    // master_reset.reset
	);

	altsource_probe_top #(
		.sld_auto_instance_index ("YES"),
		.sld_instance_index      (0),
		.instance_id             ("RST"),
		.probe_width             (0),
		.source_width            (3),
		.source_initial_value    ("0"),
		.enable_metastability    ("YES")
	) issp (
		.source     (issp_hps_resets_source), //    sources.source
		.source_clk (clk_100_clk),            // source_clk.clk
		.source_ena (1'b1)                    // (terminated)
	);

	a10s_ghrd_altera_avalon_pio_181_b3m6h3q led_pio (
		.clk        (clk_100_clk),                             //                 clk.clk
		.reset_n    (~hps_fpga_reset_reset),                   //               reset.reset_n
		.address    (mm_interconnect_2_led_pio_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_2_led_pio_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_2_led_pio_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_2_led_pio_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_2_led_pio_s1_readdata),   //                    .readdata
		.out_port   (led_pio_external_connection_export)       // external_connection.export
	);

	a10s_ghrd_altera_msgdma_181_gdu7dji msgdma_0 (
		.mm_read_address              (msgdma_0_mm_read_address),                                //          mm_read.address
		.mm_read_read                 (msgdma_0_mm_read_read),                                   //                 .read
		.mm_read_byteenable           (msgdma_0_mm_read_byteenable),                             //                 .byteenable
		.mm_read_readdata             (msgdma_0_mm_read_readdata),                               //                 .readdata
		.mm_read_waitrequest          (msgdma_0_mm_read_waitrequest),                            //                 .waitrequest
		.mm_read_readdatavalid        (msgdma_0_mm_read_readdatavalid),                          //                 .readdatavalid
		.clock_clk                    (clk_100_clk),                                             //            clock.clk
		.reset_n_reset_n              (~rst_controller_001_reset_out_reset),                     //          reset_n.reset_n
		.csr_writedata                (mm_interconnect_0_msgdma_0_csr_writedata),                //              csr.writedata
		.csr_write                    (mm_interconnect_0_msgdma_0_csr_write),                    //                 .write
		.csr_byteenable               (mm_interconnect_0_msgdma_0_csr_byteenable),               //                 .byteenable
		.csr_readdata                 (mm_interconnect_0_msgdma_0_csr_readdata),                 //                 .readdata
		.csr_read                     (mm_interconnect_0_msgdma_0_csr_read),                     //                 .read
		.csr_address                  (mm_interconnect_0_msgdma_0_csr_address),                  //                 .address
		.descriptor_slave_write       (mm_interconnect_0_msgdma_0_descriptor_slave_write),       // descriptor_slave.write
		.descriptor_slave_waitrequest (mm_interconnect_0_msgdma_0_descriptor_slave_waitrequest), //                 .waitrequest
		.descriptor_slave_writedata   (mm_interconnect_0_msgdma_0_descriptor_slave_writedata),   //                 .writedata
		.descriptor_slave_byteenable  (mm_interconnect_0_msgdma_0_descriptor_slave_byteenable),  //                 .byteenable
		.csr_irq_irq                  (irq_mapper_receiver0_irq),                                //          csr_irq.irq
		.st_source_data               (msgdma_0_st_source_data),                                 //        st_source.data
		.st_source_valid              (msgdma_0_st_source_valid),                                //                 .valid
		.st_source_ready              (msgdma_0_st_source_ready)                                 //                 .ready
	);

	a10s_ghrd_altera_msgdma_181_z42lkky msgdma_1 (
		.mm_write_address             (msgdma_1_mm_write_address),                               //         mm_write.address
		.mm_write_write               (msgdma_1_mm_write_write),                                 //                 .write
		.mm_write_byteenable          (msgdma_1_mm_write_byteenable),                            //                 .byteenable
		.mm_write_writedata           (msgdma_1_mm_write_writedata),                             //                 .writedata
		.mm_write_waitrequest         (msgdma_1_mm_write_waitrequest),                           //                 .waitrequest
		.clock_clk                    (clk_100_clk),                                             //            clock.clk
		.reset_n_reset_n              (~rst_controller_001_reset_out_reset),                     //          reset_n.reset_n
		.csr_writedata                (mm_interconnect_0_msgdma_1_csr_writedata),                //              csr.writedata
		.csr_write                    (mm_interconnect_0_msgdma_1_csr_write),                    //                 .write
		.csr_byteenable               (mm_interconnect_0_msgdma_1_csr_byteenable),               //                 .byteenable
		.csr_readdata                 (mm_interconnect_0_msgdma_1_csr_readdata),                 //                 .readdata
		.csr_read                     (mm_interconnect_0_msgdma_1_csr_read),                     //                 .read
		.csr_address                  (mm_interconnect_0_msgdma_1_csr_address),                  //                 .address
		.descriptor_slave_write       (mm_interconnect_0_msgdma_1_descriptor_slave_write),       // descriptor_slave.write
		.descriptor_slave_waitrequest (mm_interconnect_0_msgdma_1_descriptor_slave_waitrequest), //                 .waitrequest
		.descriptor_slave_writedata   (mm_interconnect_0_msgdma_1_descriptor_slave_writedata),   //                 .writedata
		.descriptor_slave_byteenable  (mm_interconnect_0_msgdma_1_descriptor_slave_byteenable),  //                 .byteenable
		.csr_irq_irq                  (irq_mapper_receiver1_irq),                                //          csr_irq.irq
		.st_sink_data                 (dc_fifo_1_out_data),                                      //          st_sink.data
		.st_sink_valid                (dc_fifo_1_out_valid),                                     //                 .valid
		.st_sink_ready                (dc_fifo_1_out_ready)                                      //                 .ready
	);

	a10s_ghrd_altera_avalon_onchip_memory2_181_7kzxmpa onchip_memory2 (
		.clk        (clk_100_clk),                                    //   clk1.clk
		.address    (mm_interconnect_0_onchip_memory2_s1_address),    //     s1.address
		.clken      (mm_interconnect_0_onchip_memory2_s1_clken),      //       .clken
		.chipselect (mm_interconnect_0_onchip_memory2_s1_chipselect), //       .chipselect
		.write      (mm_interconnect_0_onchip_memory2_s1_write),      //       .write
		.readdata   (mm_interconnect_0_onchip_memory2_s1_readdata),   //       .readdata
		.writedata  (mm_interconnect_0_onchip_memory2_s1_writedata),  //       .writedata
		.reset      (hps_fpga_reset_reset),                           // reset1.reset
		.reset_req  (rst_controller_reset_out_reset_req),             //       .reset_req
		.freeze     (1'b0)                                            // (terminated)
	);

	altera_avalon_mm_bridge #(
		.DATA_WIDTH        (32),
		.SYMBOL_WIDTH      (8),
		.HDL_ADDR_WIDTH    (9),
		.BURSTCOUNT_WIDTH  (1),
		.PIPELINE_COMMAND  (1),
		.PIPELINE_RESPONSE (1)
	) pb_lwh2f (
		.clk              (clk_100_clk),                                 //   clk.clk
		.reset            (hps_fpga_reset_reset),                        // reset.reset
		.s0_waitrequest   (mm_interconnect_1_pb_lwh2f_s0_waitrequest),   //    s0.waitrequest
		.s0_readdata      (mm_interconnect_1_pb_lwh2f_s0_readdata),      //      .readdata
		.s0_readdatavalid (mm_interconnect_1_pb_lwh2f_s0_readdatavalid), //      .readdatavalid
		.s0_burstcount    (mm_interconnect_1_pb_lwh2f_s0_burstcount),    //      .burstcount
		.s0_writedata     (mm_interconnect_1_pb_lwh2f_s0_writedata),     //      .writedata
		.s0_address       (mm_interconnect_1_pb_lwh2f_s0_address),       //      .address
		.s0_write         (mm_interconnect_1_pb_lwh2f_s0_write),         //      .write
		.s0_read          (mm_interconnect_1_pb_lwh2f_s0_read),          //      .read
		.s0_byteenable    (mm_interconnect_1_pb_lwh2f_s0_byteenable),    //      .byteenable
		.s0_debugaccess   (mm_interconnect_1_pb_lwh2f_s0_debugaccess),   //      .debugaccess
		.m0_waitrequest   (pb_lwh2f_m0_waitrequest),                     //    m0.waitrequest
		.m0_readdata      (pb_lwh2f_m0_readdata),                        //      .readdata
		.m0_readdatavalid (pb_lwh2f_m0_readdatavalid),                   //      .readdatavalid
		.m0_burstcount    (pb_lwh2f_m0_burstcount),                      //      .burstcount
		.m0_writedata     (pb_lwh2f_m0_writedata),                       //      .writedata
		.m0_address       (pb_lwh2f_m0_address),                         //      .address
		.m0_write         (pb_lwh2f_m0_write),                           //      .write
		.m0_read          (pb_lwh2f_m0_read),                            //      .read
		.m0_byteenable    (pb_lwh2f_m0_byteenable),                      //      .byteenable
		.m0_debugaccess   (pb_lwh2f_m0_debugaccess),                     //      .debugaccess
		.s0_response      (),                                            // (terminated)
		.m0_response      (2'b00)                                        // (terminated)
	);

	a10s_ghrd_altera_avalon_sysid_qsys_181_5kvhyxy sysid_qsys (
		.clock    (clk_100_clk),                                         //           clk.clk
		.reset_n  (~hps_fpga_reset_reset),                               //         reset.reset_n
		.readdata (mm_interconnect_2_sysid_qsys_control_slave_readdata), // control_slave.readdata
		.address  (mm_interconnect_2_sysid_qsys_control_slave_address)   //              .address
	);

	a10s_ghrd_altera_mm_interconnect_181_wrkfuuy mm_interconnect_0 (
		.arria10_hps_h2f_axi_master_awid                       (arria10_hps_h2f_axi_master_awid),                         //                      arria10_hps_h2f_axi_master.awid
		.arria10_hps_h2f_axi_master_awaddr                     (arria10_hps_h2f_axi_master_awaddr),                       //                                                .awaddr
		.arria10_hps_h2f_axi_master_awlen                      (arria10_hps_h2f_axi_master_awlen),                        //                                                .awlen
		.arria10_hps_h2f_axi_master_awsize                     (arria10_hps_h2f_axi_master_awsize),                       //                                                .awsize
		.arria10_hps_h2f_axi_master_awburst                    (arria10_hps_h2f_axi_master_awburst),                      //                                                .awburst
		.arria10_hps_h2f_axi_master_awlock                     (arria10_hps_h2f_axi_master_awlock),                       //                                                .awlock
		.arria10_hps_h2f_axi_master_awcache                    (arria10_hps_h2f_axi_master_awcache),                      //                                                .awcache
		.arria10_hps_h2f_axi_master_awprot                     (arria10_hps_h2f_axi_master_awprot),                       //                                                .awprot
		.arria10_hps_h2f_axi_master_awuser                     (arria10_hps_h2f_axi_master_awuser),                       //                                                .awuser
		.arria10_hps_h2f_axi_master_awvalid                    (arria10_hps_h2f_axi_master_awvalid),                      //                                                .awvalid
		.arria10_hps_h2f_axi_master_awready                    (arria10_hps_h2f_axi_master_awready),                      //                                                .awready
		.arria10_hps_h2f_axi_master_wid                        (arria10_hps_h2f_axi_master_wid),                          //                                                .wid
		.arria10_hps_h2f_axi_master_wdata                      (arria10_hps_h2f_axi_master_wdata),                        //                                                .wdata
		.arria10_hps_h2f_axi_master_wstrb                      (arria10_hps_h2f_axi_master_wstrb),                        //                                                .wstrb
		.arria10_hps_h2f_axi_master_wlast                      (arria10_hps_h2f_axi_master_wlast),                        //                                                .wlast
		.arria10_hps_h2f_axi_master_wvalid                     (arria10_hps_h2f_axi_master_wvalid),                       //                                                .wvalid
		.arria10_hps_h2f_axi_master_wready                     (arria10_hps_h2f_axi_master_wready),                       //                                                .wready
		.arria10_hps_h2f_axi_master_bid                        (arria10_hps_h2f_axi_master_bid),                          //                                                .bid
		.arria10_hps_h2f_axi_master_bresp                      (arria10_hps_h2f_axi_master_bresp),                        //                                                .bresp
		.arria10_hps_h2f_axi_master_bvalid                     (arria10_hps_h2f_axi_master_bvalid),                       //                                                .bvalid
		.arria10_hps_h2f_axi_master_bready                     (arria10_hps_h2f_axi_master_bready),                       //                                                .bready
		.arria10_hps_h2f_axi_master_arid                       (arria10_hps_h2f_axi_master_arid),                         //                                                .arid
		.arria10_hps_h2f_axi_master_araddr                     (arria10_hps_h2f_axi_master_araddr),                       //                                                .araddr
		.arria10_hps_h2f_axi_master_arlen                      (arria10_hps_h2f_axi_master_arlen),                        //                                                .arlen
		.arria10_hps_h2f_axi_master_arsize                     (arria10_hps_h2f_axi_master_arsize),                       //                                                .arsize
		.arria10_hps_h2f_axi_master_arburst                    (arria10_hps_h2f_axi_master_arburst),                      //                                                .arburst
		.arria10_hps_h2f_axi_master_arlock                     (arria10_hps_h2f_axi_master_arlock),                       //                                                .arlock
		.arria10_hps_h2f_axi_master_arcache                    (arria10_hps_h2f_axi_master_arcache),                      //                                                .arcache
		.arria10_hps_h2f_axi_master_arprot                     (arria10_hps_h2f_axi_master_arprot),                       //                                                .arprot
		.arria10_hps_h2f_axi_master_aruser                     (arria10_hps_h2f_axi_master_aruser),                       //                                                .aruser
		.arria10_hps_h2f_axi_master_arvalid                    (arria10_hps_h2f_axi_master_arvalid),                      //                                                .arvalid
		.arria10_hps_h2f_axi_master_arready                    (arria10_hps_h2f_axi_master_arready),                      //                                                .arready
		.arria10_hps_h2f_axi_master_rid                        (arria10_hps_h2f_axi_master_rid),                          //                                                .rid
		.arria10_hps_h2f_axi_master_rdata                      (arria10_hps_h2f_axi_master_rdata),                        //                                                .rdata
		.arria10_hps_h2f_axi_master_rresp                      (arria10_hps_h2f_axi_master_rresp),                        //                                                .rresp
		.arria10_hps_h2f_axi_master_rlast                      (arria10_hps_h2f_axi_master_rlast),                        //                                                .rlast
		.arria10_hps_h2f_axi_master_rvalid                     (arria10_hps_h2f_axi_master_rvalid),                       //                                                .rvalid
		.arria10_hps_h2f_axi_master_rready                     (arria10_hps_h2f_axi_master_rready),                       //                                                .rready
		.clk_100_clk_clk                                       (clk_100_clk),                                             //                                     clk_100_clk.clk
		.arria10_hps_h2f_axi_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                      // arria10_hps_h2f_axi_reset_reset_bridge_in_reset.reset
		.onchip_memory2_reset1_reset_bridge_in_reset_reset     (hps_fpga_reset_reset),                                    //     onchip_memory2_reset1_reset_bridge_in_reset.reset
		.msgdma_0_csr_address                                  (mm_interconnect_0_msgdma_0_csr_address),                  //                                    msgdma_0_csr.address
		.msgdma_0_csr_write                                    (mm_interconnect_0_msgdma_0_csr_write),                    //                                                .write
		.msgdma_0_csr_read                                     (mm_interconnect_0_msgdma_0_csr_read),                     //                                                .read
		.msgdma_0_csr_readdata                                 (mm_interconnect_0_msgdma_0_csr_readdata),                 //                                                .readdata
		.msgdma_0_csr_writedata                                (mm_interconnect_0_msgdma_0_csr_writedata),                //                                                .writedata
		.msgdma_0_csr_byteenable                               (mm_interconnect_0_msgdma_0_csr_byteenable),               //                                                .byteenable
		.msgdma_0_descriptor_slave_write                       (mm_interconnect_0_msgdma_0_descriptor_slave_write),       //                       msgdma_0_descriptor_slave.write
		.msgdma_0_descriptor_slave_writedata                   (mm_interconnect_0_msgdma_0_descriptor_slave_writedata),   //                                                .writedata
		.msgdma_0_descriptor_slave_byteenable                  (mm_interconnect_0_msgdma_0_descriptor_slave_byteenable),  //                                                .byteenable
		.msgdma_0_descriptor_slave_waitrequest                 (mm_interconnect_0_msgdma_0_descriptor_slave_waitrequest), //                                                .waitrequest
		.msgdma_1_csr_address                                  (mm_interconnect_0_msgdma_1_csr_address),                  //                                    msgdma_1_csr.address
		.msgdma_1_csr_write                                    (mm_interconnect_0_msgdma_1_csr_write),                    //                                                .write
		.msgdma_1_csr_read                                     (mm_interconnect_0_msgdma_1_csr_read),                     //                                                .read
		.msgdma_1_csr_readdata                                 (mm_interconnect_0_msgdma_1_csr_readdata),                 //                                                .readdata
		.msgdma_1_csr_writedata                                (mm_interconnect_0_msgdma_1_csr_writedata),                //                                                .writedata
		.msgdma_1_csr_byteenable                               (mm_interconnect_0_msgdma_1_csr_byteenable),               //                                                .byteenable
		.msgdma_1_descriptor_slave_write                       (mm_interconnect_0_msgdma_1_descriptor_slave_write),       //                       msgdma_1_descriptor_slave.write
		.msgdma_1_descriptor_slave_writedata                   (mm_interconnect_0_msgdma_1_descriptor_slave_writedata),   //                                                .writedata
		.msgdma_1_descriptor_slave_byteenable                  (mm_interconnect_0_msgdma_1_descriptor_slave_byteenable),  //                                                .byteenable
		.msgdma_1_descriptor_slave_waitrequest                 (mm_interconnect_0_msgdma_1_descriptor_slave_waitrequest), //                                                .waitrequest
		.onchip_memory2_s1_address                             (mm_interconnect_0_onchip_memory2_s1_address),             //                               onchip_memory2_s1.address
		.onchip_memory2_s1_write                               (mm_interconnect_0_onchip_memory2_s1_write),               //                                                .write
		.onchip_memory2_s1_readdata                            (mm_interconnect_0_onchip_memory2_s1_readdata),            //                                                .readdata
		.onchip_memory2_s1_writedata                           (mm_interconnect_0_onchip_memory2_s1_writedata),           //                                                .writedata
		.onchip_memory2_s1_chipselect                          (mm_interconnect_0_onchip_memory2_s1_chipselect),          //                                                .chipselect
		.onchip_memory2_s1_clken                               (mm_interconnect_0_onchip_memory2_s1_clken)                //                                                .clken
	);

	a10s_ghrd_altera_mm_interconnect_181_2w3xhoq mm_interconnect_1 (
		.arria10_hps_h2f_lw_axi_master_awid                       (arria10_hps_h2f_lw_axi_master_awid),          //                      arria10_hps_h2f_lw_axi_master.awid
		.arria10_hps_h2f_lw_axi_master_awaddr                     (arria10_hps_h2f_lw_axi_master_awaddr),        //                                                   .awaddr
		.arria10_hps_h2f_lw_axi_master_awlen                      (arria10_hps_h2f_lw_axi_master_awlen),         //                                                   .awlen
		.arria10_hps_h2f_lw_axi_master_awsize                     (arria10_hps_h2f_lw_axi_master_awsize),        //                                                   .awsize
		.arria10_hps_h2f_lw_axi_master_awburst                    (arria10_hps_h2f_lw_axi_master_awburst),       //                                                   .awburst
		.arria10_hps_h2f_lw_axi_master_awlock                     (arria10_hps_h2f_lw_axi_master_awlock),        //                                                   .awlock
		.arria10_hps_h2f_lw_axi_master_awcache                    (arria10_hps_h2f_lw_axi_master_awcache),       //                                                   .awcache
		.arria10_hps_h2f_lw_axi_master_awprot                     (arria10_hps_h2f_lw_axi_master_awprot),        //                                                   .awprot
		.arria10_hps_h2f_lw_axi_master_awuser                     (arria10_hps_h2f_lw_axi_master_awuser),        //                                                   .awuser
		.arria10_hps_h2f_lw_axi_master_awvalid                    (arria10_hps_h2f_lw_axi_master_awvalid),       //                                                   .awvalid
		.arria10_hps_h2f_lw_axi_master_awready                    (arria10_hps_h2f_lw_axi_master_awready),       //                                                   .awready
		.arria10_hps_h2f_lw_axi_master_wid                        (arria10_hps_h2f_lw_axi_master_wid),           //                                                   .wid
		.arria10_hps_h2f_lw_axi_master_wdata                      (arria10_hps_h2f_lw_axi_master_wdata),         //                                                   .wdata
		.arria10_hps_h2f_lw_axi_master_wstrb                      (arria10_hps_h2f_lw_axi_master_wstrb),         //                                                   .wstrb
		.arria10_hps_h2f_lw_axi_master_wlast                      (arria10_hps_h2f_lw_axi_master_wlast),         //                                                   .wlast
		.arria10_hps_h2f_lw_axi_master_wvalid                     (arria10_hps_h2f_lw_axi_master_wvalid),        //                                                   .wvalid
		.arria10_hps_h2f_lw_axi_master_wready                     (arria10_hps_h2f_lw_axi_master_wready),        //                                                   .wready
		.arria10_hps_h2f_lw_axi_master_bid                        (arria10_hps_h2f_lw_axi_master_bid),           //                                                   .bid
		.arria10_hps_h2f_lw_axi_master_bresp                      (arria10_hps_h2f_lw_axi_master_bresp),         //                                                   .bresp
		.arria10_hps_h2f_lw_axi_master_bvalid                     (arria10_hps_h2f_lw_axi_master_bvalid),        //                                                   .bvalid
		.arria10_hps_h2f_lw_axi_master_bready                     (arria10_hps_h2f_lw_axi_master_bready),        //                                                   .bready
		.arria10_hps_h2f_lw_axi_master_arid                       (arria10_hps_h2f_lw_axi_master_arid),          //                                                   .arid
		.arria10_hps_h2f_lw_axi_master_araddr                     (arria10_hps_h2f_lw_axi_master_araddr),        //                                                   .araddr
		.arria10_hps_h2f_lw_axi_master_arlen                      (arria10_hps_h2f_lw_axi_master_arlen),         //                                                   .arlen
		.arria10_hps_h2f_lw_axi_master_arsize                     (arria10_hps_h2f_lw_axi_master_arsize),        //                                                   .arsize
		.arria10_hps_h2f_lw_axi_master_arburst                    (arria10_hps_h2f_lw_axi_master_arburst),       //                                                   .arburst
		.arria10_hps_h2f_lw_axi_master_arlock                     (arria10_hps_h2f_lw_axi_master_arlock),        //                                                   .arlock
		.arria10_hps_h2f_lw_axi_master_arcache                    (arria10_hps_h2f_lw_axi_master_arcache),       //                                                   .arcache
		.arria10_hps_h2f_lw_axi_master_arprot                     (arria10_hps_h2f_lw_axi_master_arprot),        //                                                   .arprot
		.arria10_hps_h2f_lw_axi_master_aruser                     (arria10_hps_h2f_lw_axi_master_aruser),        //                                                   .aruser
		.arria10_hps_h2f_lw_axi_master_arvalid                    (arria10_hps_h2f_lw_axi_master_arvalid),       //                                                   .arvalid
		.arria10_hps_h2f_lw_axi_master_arready                    (arria10_hps_h2f_lw_axi_master_arready),       //                                                   .arready
		.arria10_hps_h2f_lw_axi_master_rid                        (arria10_hps_h2f_lw_axi_master_rid),           //                                                   .rid
		.arria10_hps_h2f_lw_axi_master_rdata                      (arria10_hps_h2f_lw_axi_master_rdata),         //                                                   .rdata
		.arria10_hps_h2f_lw_axi_master_rresp                      (arria10_hps_h2f_lw_axi_master_rresp),         //                                                   .rresp
		.arria10_hps_h2f_lw_axi_master_rlast                      (arria10_hps_h2f_lw_axi_master_rlast),         //                                                   .rlast
		.arria10_hps_h2f_lw_axi_master_rvalid                     (arria10_hps_h2f_lw_axi_master_rvalid),        //                                                   .rvalid
		.arria10_hps_h2f_lw_axi_master_rready                     (arria10_hps_h2f_lw_axi_master_rready),        //                                                   .rready
		.clk_100_clk_clk                                          (clk_100_clk),                                 //                                        clk_100_clk.clk
		.arria10_hps_h2f_lw_axi_reset_reset_bridge_in_reset_reset (hps_fpga_reset_reset),                        // arria10_hps_h2f_lw_axi_reset_reset_bridge_in_reset.reset
		.fpga_m_clk_reset_reset_bridge_in_reset_reset             (hps_fpga_reset_reset),                        //             fpga_m_clk_reset_reset_bridge_in_reset.reset
		.fpga_m_master_address                                    (fpga_m_master_address),                       //                                      fpga_m_master.address
		.fpga_m_master_waitrequest                                (fpga_m_master_waitrequest),                   //                                                   .waitrequest
		.fpga_m_master_byteenable                                 (fpga_m_master_byteenable),                    //                                                   .byteenable
		.fpga_m_master_read                                       (fpga_m_master_read),                          //                                                   .read
		.fpga_m_master_readdata                                   (fpga_m_master_readdata),                      //                                                   .readdata
		.fpga_m_master_readdatavalid                              (fpga_m_master_readdatavalid),                 //                                                   .readdatavalid
		.fpga_m_master_write                                      (fpga_m_master_write),                         //                                                   .write
		.fpga_m_master_writedata                                  (fpga_m_master_writedata),                     //                                                   .writedata
		.pb_lwh2f_s0_address                                      (mm_interconnect_1_pb_lwh2f_s0_address),       //                                        pb_lwh2f_s0.address
		.pb_lwh2f_s0_write                                        (mm_interconnect_1_pb_lwh2f_s0_write),         //                                                   .write
		.pb_lwh2f_s0_read                                         (mm_interconnect_1_pb_lwh2f_s0_read),          //                                                   .read
		.pb_lwh2f_s0_readdata                                     (mm_interconnect_1_pb_lwh2f_s0_readdata),      //                                                   .readdata
		.pb_lwh2f_s0_writedata                                    (mm_interconnect_1_pb_lwh2f_s0_writedata),     //                                                   .writedata
		.pb_lwh2f_s0_burstcount                                   (mm_interconnect_1_pb_lwh2f_s0_burstcount),    //                                                   .burstcount
		.pb_lwh2f_s0_byteenable                                   (mm_interconnect_1_pb_lwh2f_s0_byteenable),    //                                                   .byteenable
		.pb_lwh2f_s0_readdatavalid                                (mm_interconnect_1_pb_lwh2f_s0_readdatavalid), //                                                   .readdatavalid
		.pb_lwh2f_s0_waitrequest                                  (mm_interconnect_1_pb_lwh2f_s0_waitrequest),   //                                                   .waitrequest
		.pb_lwh2f_s0_debugaccess                                  (mm_interconnect_1_pb_lwh2f_s0_debugaccess)    //                                                   .debugaccess
	);

	a10s_ghrd_altera_mm_interconnect_181_6tzbopq mm_interconnect_2 (
		.clk_100_clk_clk                            (clk_100_clk),                                         //                          clk_100_clk.clk
		.pb_lwh2f_reset_reset_bridge_in_reset_reset (hps_fpga_reset_reset),                                // pb_lwh2f_reset_reset_bridge_in_reset.reset
		.pb_lwh2f_m0_address                        (pb_lwh2f_m0_address),                                 //                          pb_lwh2f_m0.address
		.pb_lwh2f_m0_waitrequest                    (pb_lwh2f_m0_waitrequest),                             //                                     .waitrequest
		.pb_lwh2f_m0_burstcount                     (pb_lwh2f_m0_burstcount),                              //                                     .burstcount
		.pb_lwh2f_m0_byteenable                     (pb_lwh2f_m0_byteenable),                              //                                     .byteenable
		.pb_lwh2f_m0_read                           (pb_lwh2f_m0_read),                                    //                                     .read
		.pb_lwh2f_m0_readdata                       (pb_lwh2f_m0_readdata),                                //                                     .readdata
		.pb_lwh2f_m0_readdatavalid                  (pb_lwh2f_m0_readdatavalid),                           //                                     .readdatavalid
		.pb_lwh2f_m0_write                          (pb_lwh2f_m0_write),                                   //                                     .write
		.pb_lwh2f_m0_writedata                      (pb_lwh2f_m0_writedata),                               //                                     .writedata
		.pb_lwh2f_m0_debugaccess                    (pb_lwh2f_m0_debugaccess),                             //                                     .debugaccess
		.button_pio_s1_address                      (mm_interconnect_2_button_pio_s1_address),             //                        button_pio_s1.address
		.button_pio_s1_write                        (mm_interconnect_2_button_pio_s1_write),               //                                     .write
		.button_pio_s1_readdata                     (mm_interconnect_2_button_pio_s1_readdata),            //                                     .readdata
		.button_pio_s1_writedata                    (mm_interconnect_2_button_pio_s1_writedata),           //                                     .writedata
		.button_pio_s1_chipselect                   (mm_interconnect_2_button_pio_s1_chipselect),          //                                     .chipselect
		.dipsw_pio_s1_address                       (mm_interconnect_2_dipsw_pio_s1_address),              //                         dipsw_pio_s1.address
		.dipsw_pio_s1_write                         (mm_interconnect_2_dipsw_pio_s1_write),                //                                     .write
		.dipsw_pio_s1_readdata                      (mm_interconnect_2_dipsw_pio_s1_readdata),             //                                     .readdata
		.dipsw_pio_s1_writedata                     (mm_interconnect_2_dipsw_pio_s1_writedata),            //                                     .writedata
		.dipsw_pio_s1_chipselect                    (mm_interconnect_2_dipsw_pio_s1_chipselect),           //                                     .chipselect
		.ILC_avalon_slave_address                   (mm_interconnect_2_ilc_avalon_slave_address),          //                     ILC_avalon_slave.address
		.ILC_avalon_slave_write                     (mm_interconnect_2_ilc_avalon_slave_write),            //                                     .write
		.ILC_avalon_slave_read                      (mm_interconnect_2_ilc_avalon_slave_read),             //                                     .read
		.ILC_avalon_slave_readdata                  (mm_interconnect_2_ilc_avalon_slave_readdata),         //                                     .readdata
		.ILC_avalon_slave_writedata                 (mm_interconnect_2_ilc_avalon_slave_writedata),        //                                     .writedata
		.led_pio_s1_address                         (mm_interconnect_2_led_pio_s1_address),                //                           led_pio_s1.address
		.led_pio_s1_write                           (mm_interconnect_2_led_pio_s1_write),                  //                                     .write
		.led_pio_s1_readdata                        (mm_interconnect_2_led_pio_s1_readdata),               //                                     .readdata
		.led_pio_s1_writedata                       (mm_interconnect_2_led_pio_s1_writedata),              //                                     .writedata
		.led_pio_s1_chipselect                      (mm_interconnect_2_led_pio_s1_chipselect),             //                                     .chipselect
		.sysid_qsys_control_slave_address           (mm_interconnect_2_sysid_qsys_control_slave_address),  //             sysid_qsys_control_slave.address
		.sysid_qsys_control_slave_readdata          (mm_interconnect_2_sysid_qsys_control_slave_readdata)  //                                     .readdata
	);

	a10s_ghrd_altera_mm_interconnect_181_6u7usai mm_interconnect_3 (
		.arria10_hps_f2h_axi_slave_awid                        (mm_interconnect_3_arria10_hps_f2h_axi_slave_awid),    //                       arria10_hps_f2h_axi_slave.awid
		.arria10_hps_f2h_axi_slave_awaddr                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_awaddr),  //                                                .awaddr
		.arria10_hps_f2h_axi_slave_awlen                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_awlen),   //                                                .awlen
		.arria10_hps_f2h_axi_slave_awsize                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_awsize),  //                                                .awsize
		.arria10_hps_f2h_axi_slave_awburst                     (mm_interconnect_3_arria10_hps_f2h_axi_slave_awburst), //                                                .awburst
		.arria10_hps_f2h_axi_slave_awlock                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_awlock),  //                                                .awlock
		.arria10_hps_f2h_axi_slave_awcache                     (mm_interconnect_3_arria10_hps_f2h_axi_slave_awcache), //                                                .awcache
		.arria10_hps_f2h_axi_slave_awprot                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_awprot),  //                                                .awprot
		.arria10_hps_f2h_axi_slave_awuser                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_awuser),  //                                                .awuser
		.arria10_hps_f2h_axi_slave_awvalid                     (mm_interconnect_3_arria10_hps_f2h_axi_slave_awvalid), //                                                .awvalid
		.arria10_hps_f2h_axi_slave_awready                     (mm_interconnect_3_arria10_hps_f2h_axi_slave_awready), //                                                .awready
		.arria10_hps_f2h_axi_slave_wid                         (mm_interconnect_3_arria10_hps_f2h_axi_slave_wid),     //                                                .wid
		.arria10_hps_f2h_axi_slave_wdata                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_wdata),   //                                                .wdata
		.arria10_hps_f2h_axi_slave_wstrb                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_wstrb),   //                                                .wstrb
		.arria10_hps_f2h_axi_slave_wlast                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_wlast),   //                                                .wlast
		.arria10_hps_f2h_axi_slave_wvalid                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_wvalid),  //                                                .wvalid
		.arria10_hps_f2h_axi_slave_wready                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_wready),  //                                                .wready
		.arria10_hps_f2h_axi_slave_bid                         (mm_interconnect_3_arria10_hps_f2h_axi_slave_bid),     //                                                .bid
		.arria10_hps_f2h_axi_slave_bresp                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_bresp),   //                                                .bresp
		.arria10_hps_f2h_axi_slave_bvalid                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_bvalid),  //                                                .bvalid
		.arria10_hps_f2h_axi_slave_bready                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_bready),  //                                                .bready
		.arria10_hps_f2h_axi_slave_arid                        (mm_interconnect_3_arria10_hps_f2h_axi_slave_arid),    //                                                .arid
		.arria10_hps_f2h_axi_slave_araddr                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_araddr),  //                                                .araddr
		.arria10_hps_f2h_axi_slave_arlen                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_arlen),   //                                                .arlen
		.arria10_hps_f2h_axi_slave_arsize                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_arsize),  //                                                .arsize
		.arria10_hps_f2h_axi_slave_arburst                     (mm_interconnect_3_arria10_hps_f2h_axi_slave_arburst), //                                                .arburst
		.arria10_hps_f2h_axi_slave_arlock                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_arlock),  //                                                .arlock
		.arria10_hps_f2h_axi_slave_arcache                     (mm_interconnect_3_arria10_hps_f2h_axi_slave_arcache), //                                                .arcache
		.arria10_hps_f2h_axi_slave_arprot                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_arprot),  //                                                .arprot
		.arria10_hps_f2h_axi_slave_aruser                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_aruser),  //                                                .aruser
		.arria10_hps_f2h_axi_slave_arvalid                     (mm_interconnect_3_arria10_hps_f2h_axi_slave_arvalid), //                                                .arvalid
		.arria10_hps_f2h_axi_slave_arready                     (mm_interconnect_3_arria10_hps_f2h_axi_slave_arready), //                                                .arready
		.arria10_hps_f2h_axi_slave_rid                         (mm_interconnect_3_arria10_hps_f2h_axi_slave_rid),     //                                                .rid
		.arria10_hps_f2h_axi_slave_rdata                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_rdata),   //                                                .rdata
		.arria10_hps_f2h_axi_slave_rresp                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_rresp),   //                                                .rresp
		.arria10_hps_f2h_axi_slave_rlast                       (mm_interconnect_3_arria10_hps_f2h_axi_slave_rlast),   //                                                .rlast
		.arria10_hps_f2h_axi_slave_rvalid                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_rvalid),  //                                                .rvalid
		.arria10_hps_f2h_axi_slave_rready                      (mm_interconnect_3_arria10_hps_f2h_axi_slave_rready),  //                                                .rready
		.clk_100_clk_clk                                       (clk_100_clk),                                         //                                     clk_100_clk.clk
		.arria10_hps_f2h_axi_reset_reset_bridge_in_reset_reset (hps_fpga_reset_reset),                                // arria10_hps_f2h_axi_reset_reset_bridge_in_reset.reset
		.hps_m_clk_reset_reset_bridge_in_reset_reset           (hps_fpga_reset_reset),                                //           hps_m_clk_reset_reset_bridge_in_reset.reset
		.msgdma_0_reset_n_reset_bridge_in_reset_reset          (rst_controller_001_reset_out_reset),                  //          msgdma_0_reset_n_reset_bridge_in_reset.reset
		.hps_m_master_address                                  (hps_m_master_address),                                //                                    hps_m_master.address
		.hps_m_master_waitrequest                              (hps_m_master_waitrequest),                            //                                                .waitrequest
		.hps_m_master_byteenable                               (hps_m_master_byteenable),                             //                                                .byteenable
		.hps_m_master_read                                     (hps_m_master_read),                                   //                                                .read
		.hps_m_master_readdata                                 (hps_m_master_readdata),                               //                                                .readdata
		.hps_m_master_readdatavalid                            (hps_m_master_readdatavalid),                          //                                                .readdatavalid
		.hps_m_master_write                                    (hps_m_master_write),                                  //                                                .write
		.hps_m_master_writedata                                (hps_m_master_writedata),                              //                                                .writedata
		.msgdma_0_mm_read_address                              (msgdma_0_mm_read_address),                            //                                msgdma_0_mm_read.address
		.msgdma_0_mm_read_waitrequest                          (msgdma_0_mm_read_waitrequest),                        //                                                .waitrequest
		.msgdma_0_mm_read_byteenable                           (msgdma_0_mm_read_byteenable),                         //                                                .byteenable
		.msgdma_0_mm_read_read                                 (msgdma_0_mm_read_read),                               //                                                .read
		.msgdma_0_mm_read_readdata                             (msgdma_0_mm_read_readdata),                           //                                                .readdata
		.msgdma_0_mm_read_readdatavalid                        (msgdma_0_mm_read_readdatavalid),                      //                                                .readdatavalid
		.msgdma_1_mm_write_address                             (msgdma_1_mm_write_address),                           //                               msgdma_1_mm_write.address
		.msgdma_1_mm_write_waitrequest                         (msgdma_1_mm_write_waitrequest),                       //                                                .waitrequest
		.msgdma_1_mm_write_byteenable                          (msgdma_1_mm_write_byteenable),                        //                                                .byteenable
		.msgdma_1_mm_write_write                               (msgdma_1_mm_write_write),                             //                                                .write
		.msgdma_1_mm_write_writedata                           (msgdma_1_mm_write_writedata)                          //                                                .writedata
	);

	a10s_ghrd_altera_mm_interconnect_181_dvebr6a mm_interconnect_4 (
		.arria10_hps_f2sdram0_data_awid                                (mm_interconnect_4_arria10_hps_f2sdram0_data_awid),    //                               arria10_hps_f2sdram0_data.awid
		.arria10_hps_f2sdram0_data_awaddr                              (mm_interconnect_4_arria10_hps_f2sdram0_data_awaddr),  //                                                        .awaddr
		.arria10_hps_f2sdram0_data_awlen                               (mm_interconnect_4_arria10_hps_f2sdram0_data_awlen),   //                                                        .awlen
		.arria10_hps_f2sdram0_data_awsize                              (mm_interconnect_4_arria10_hps_f2sdram0_data_awsize),  //                                                        .awsize
		.arria10_hps_f2sdram0_data_awburst                             (mm_interconnect_4_arria10_hps_f2sdram0_data_awburst), //                                                        .awburst
		.arria10_hps_f2sdram0_data_awlock                              (mm_interconnect_4_arria10_hps_f2sdram0_data_awlock),  //                                                        .awlock
		.arria10_hps_f2sdram0_data_awcache                             (mm_interconnect_4_arria10_hps_f2sdram0_data_awcache), //                                                        .awcache
		.arria10_hps_f2sdram0_data_awprot                              (mm_interconnect_4_arria10_hps_f2sdram0_data_awprot),  //                                                        .awprot
		.arria10_hps_f2sdram0_data_awuser                              (mm_interconnect_4_arria10_hps_f2sdram0_data_awuser),  //                                                        .awuser
		.arria10_hps_f2sdram0_data_awvalid                             (mm_interconnect_4_arria10_hps_f2sdram0_data_awvalid), //                                                        .awvalid
		.arria10_hps_f2sdram0_data_awready                             (mm_interconnect_4_arria10_hps_f2sdram0_data_awready), //                                                        .awready
		.arria10_hps_f2sdram0_data_wid                                 (mm_interconnect_4_arria10_hps_f2sdram0_data_wid),     //                                                        .wid
		.arria10_hps_f2sdram0_data_wdata                               (mm_interconnect_4_arria10_hps_f2sdram0_data_wdata),   //                                                        .wdata
		.arria10_hps_f2sdram0_data_wstrb                               (mm_interconnect_4_arria10_hps_f2sdram0_data_wstrb),   //                                                        .wstrb
		.arria10_hps_f2sdram0_data_wlast                               (mm_interconnect_4_arria10_hps_f2sdram0_data_wlast),   //                                                        .wlast
		.arria10_hps_f2sdram0_data_wvalid                              (mm_interconnect_4_arria10_hps_f2sdram0_data_wvalid),  //                                                        .wvalid
		.arria10_hps_f2sdram0_data_wready                              (mm_interconnect_4_arria10_hps_f2sdram0_data_wready),  //                                                        .wready
		.arria10_hps_f2sdram0_data_bid                                 (mm_interconnect_4_arria10_hps_f2sdram0_data_bid),     //                                                        .bid
		.arria10_hps_f2sdram0_data_bresp                               (mm_interconnect_4_arria10_hps_f2sdram0_data_bresp),   //                                                        .bresp
		.arria10_hps_f2sdram0_data_bvalid                              (mm_interconnect_4_arria10_hps_f2sdram0_data_bvalid),  //                                                        .bvalid
		.arria10_hps_f2sdram0_data_bready                              (mm_interconnect_4_arria10_hps_f2sdram0_data_bready),  //                                                        .bready
		.arria10_hps_f2sdram0_data_arid                                (mm_interconnect_4_arria10_hps_f2sdram0_data_arid),    //                                                        .arid
		.arria10_hps_f2sdram0_data_araddr                              (mm_interconnect_4_arria10_hps_f2sdram0_data_araddr),  //                                                        .araddr
		.arria10_hps_f2sdram0_data_arlen                               (mm_interconnect_4_arria10_hps_f2sdram0_data_arlen),   //                                                        .arlen
		.arria10_hps_f2sdram0_data_arsize                              (mm_interconnect_4_arria10_hps_f2sdram0_data_arsize),  //                                                        .arsize
		.arria10_hps_f2sdram0_data_arburst                             (mm_interconnect_4_arria10_hps_f2sdram0_data_arburst), //                                                        .arburst
		.arria10_hps_f2sdram0_data_arlock                              (mm_interconnect_4_arria10_hps_f2sdram0_data_arlock),  //                                                        .arlock
		.arria10_hps_f2sdram0_data_arcache                             (mm_interconnect_4_arria10_hps_f2sdram0_data_arcache), //                                                        .arcache
		.arria10_hps_f2sdram0_data_arprot                              (mm_interconnect_4_arria10_hps_f2sdram0_data_arprot),  //                                                        .arprot
		.arria10_hps_f2sdram0_data_aruser                              (mm_interconnect_4_arria10_hps_f2sdram0_data_aruser),  //                                                        .aruser
		.arria10_hps_f2sdram0_data_arvalid                             (mm_interconnect_4_arria10_hps_f2sdram0_data_arvalid), //                                                        .arvalid
		.arria10_hps_f2sdram0_data_arready                             (mm_interconnect_4_arria10_hps_f2sdram0_data_arready), //                                                        .arready
		.arria10_hps_f2sdram0_data_rid                                 (mm_interconnect_4_arria10_hps_f2sdram0_data_rid),     //                                                        .rid
		.arria10_hps_f2sdram0_data_rdata                               (mm_interconnect_4_arria10_hps_f2sdram0_data_rdata),   //                                                        .rdata
		.arria10_hps_f2sdram0_data_rresp                               (mm_interconnect_4_arria10_hps_f2sdram0_data_rresp),   //                                                        .rresp
		.arria10_hps_f2sdram0_data_rlast                               (mm_interconnect_4_arria10_hps_f2sdram0_data_rlast),   //                                                        .rlast
		.arria10_hps_f2sdram0_data_rvalid                              (mm_interconnect_4_arria10_hps_f2sdram0_data_rvalid),  //                                                        .rvalid
		.arria10_hps_f2sdram0_data_rready                              (mm_interconnect_4_arria10_hps_f2sdram0_data_rready),  //                                                        .rready
		.clk_100_clk_clk                                               (clk_100_clk),                                         //                                             clk_100_clk.clk
		.arria10_hps_f2sdram0_reset_reset_bridge_in_reset_reset        (rst_controller_001_reset_out_reset),                  //        arria10_hps_f2sdram0_reset_reset_bridge_in_reset.reset
		.f2sdram_m_clk_reset_reset_bridge_in_reset_reset               (hps_fpga_reset_reset),                                //               f2sdram_m_clk_reset_reset_bridge_in_reset.reset
		.f2sdram_m_master_translator_reset_reset_bridge_in_reset_reset (hps_fpga_reset_reset),                                // f2sdram_m_master_translator_reset_reset_bridge_in_reset.reset
		.f2sdram_m_master_address                                      (f2sdram_m_master_address),                            //                                        f2sdram_m_master.address
		.f2sdram_m_master_waitrequest                                  (f2sdram_m_master_waitrequest),                        //                                                        .waitrequest
		.f2sdram_m_master_byteenable                                   (f2sdram_m_master_byteenable),                         //                                                        .byteenable
		.f2sdram_m_master_read                                         (f2sdram_m_master_read),                               //                                                        .read
		.f2sdram_m_master_readdata                                     (f2sdram_m_master_readdata),                           //                                                        .readdata
		.f2sdram_m_master_readdatavalid                                (f2sdram_m_master_readdatavalid),                      //                                                        .readdatavalid
		.f2sdram_m_master_write                                        (f2sdram_m_master_write),                              //                                                        .write
		.f2sdram_m_master_writedata                                    (f2sdram_m_master_writedata)                           //                                                        .writedata
	);

	a10s_ghrd_altera_irq_mapper_181_tzoq7yy irq_mapper (
		.clk           (clk_100_clk),              //       clk.clk
		.reset         (hps_fpga_reset_reset),     // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq), // receiver0.irq
		.receiver1_irq (irq_mapper_receiver1_irq), // receiver1.irq
		.receiver2_irq (irq_mapper_receiver2_irq), // receiver2.irq
		.receiver3_irq (irq_mapper_receiver3_irq), // receiver3.irq
		.sender_irq    (ilc_irq_irq)               //    sender.irq
	);

	a10s_ghrd_altera_irq_mapper_181_5nwfdui irq_mapper_001 (
		.clk           (),                         //       clk.clk
		.reset         (),                         // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq), // receiver0.irq
		.receiver1_irq (irq_mapper_receiver1_irq), // receiver1.irq
		.receiver2_irq (irq_mapper_receiver2_irq), // receiver2.irq
		.receiver3_irq (irq_mapper_receiver3_irq), // receiver3.irq
		.sender_irq    (arria10_hps_f2h_irq0_irq)  //    sender.irq
	);

	a10s_ghrd_altera_irq_mapper_181_acw3b6a irq_mapper_002 (
		.clk        (),                         //       clk.clk
		.reset      (),                         // clk_reset.reset
		.sender_irq (arria10_hps_f2h_irq1_irq)  //    sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (1),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (~arria10_hps_h2f_reset_reset),       // reset_in1.reset
		.clk            (clk_100_clk),                        //       clk.clk
		.reset_out      (hps_fpga_reset_reset),               // reset_out.reset
		.reset_req      (rst_controller_reset_out_reset_req), //          .reset_req
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.clk            (clk_100_clk),                        //       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_in1      (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_002 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.clk            (clock_bridge_0_in_clk_clk),          //       clk.clk
		.reset_out      (rst_controller_002_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_in1      (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_003 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (~arria10_hps_h2f_reset_reset),       // reset_in1.reset
		.clk            (),                                   //       clk.clk
		.reset_out      (rst_controller_003_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_004 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (~arria10_hps_h2f_reset_reset),       // reset_in1.reset
		.clk            (),                                   //       clk.clk
		.reset_out      (rst_controller_004_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_005 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (~arria10_hps_h2f_reset_reset),       // reset_in1.reset
		.clk            (),                                   //       clk.clk
		.reset_out      (rst_controller_005_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

endmodule
